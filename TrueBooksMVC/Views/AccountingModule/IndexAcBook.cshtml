@model IEnumerable<DAL.AcJournalMasterSelectAll_Result>
@{
    ViewBag.Title = "Cash and Bank Book";
    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
    var isadd = true;
    var ismodify = true;
    var isdelete = true;

    string path = Request.Url.AbsolutePath.ToLower();

    if (Convert.ToInt32(Session["UserRoleID"]) > 1)
    {
        TrueBooksMVC.Models.SourceMastersModel obj = new TrueBooksMVC.Models.SourceMastersModel();
        isadd = obj.GetAddpermission(Convert.ToInt32(Session["UserRoleID"]), path);
        ismodify = obj.GetModifypermission(Convert.ToInt32(Session["UserRoleID"]), path);
        isdelete = obj.GetDeletepermission(Convert.ToInt32(Session["UserRoleID"]), path);

    }
}
<style>
    tfoot {
        display: table-header-group;
    }

    .tblbackground {
        background-color: #fff;
        box-shadow: 0 9px 23px rgba(0, 0, 0, 0.09), 0 5px 5px rgba(0, 0, 0, 0.06) !important;
        border-radius: 10px;
    }

    td.details-control img {
        padding: 5px;
        /* background: url('/Content/img/details_open.png') no-repeat center center;
        cursor: pointer;*/
    }

    tr.shown td.details-control img {
        padding: 5px;
        /* background: url('/Content/img/details_close.png') no-repeat center center; */
    }
</style>



<script type="text/javascript">
    $(document).ready(function () {

        $('#dataTables-example tfoot th').each(function () {
            var title = $(this).text();
            $(this).html('<input type="text" />');
        });

        var table = $('#dataTables-example').DataTable({ "sPaginationType": "full_numbers" });

        table.columns().every(function () {
            var that = this;

            $('input', this.footer()).on('keyup change', function () {
                if (that.search() !== this.value) {
                    that
                        .search(this.value)
                        .draw();
                }
            });
        });

        function format(d) {
           
            var JournalDetailId = d[5];
            var DataHtml = '';
            $.ajax({
                type: "POST",
                url: "/AccountingModule/AcBookDetails",
                datatype: "Json",
                data: { DetailId: JournalDetailId },
                success: function (data) {
                    
                    DataHtml = '<table>';
                    $.each(data, function (index, value) {
                        DataHtml = DataHtml + '<tr><td>' + value.AcHead + '</td><td class="textright">' + value.Amount + '</td><td>' + value.Remarks + '</td></tr>';
                    });
                    DataHtml = DataHtml + '</table>';
                    $('#pr_' + JournalDetailId).append(DataHtml);
                }
            });

            return '<p id="pr_' + JournalDetailId + '"></p>';
        }

        $('#dataTables-example tbody').on('click', 'td.details-control', function () {
            var tr = $(this).closest('tr');
            var row = table.row(tr);
            if (row.child.isShown()) {
                // This row is already open - close it
                row.child.hide();
                tr.removeClass('shown');
                $(this).find('img').attr('src', '/Content/img/details_open.png');
            }
            else {
                // Open this row
                row.child(format(row.data())).show();
                tr.addClass('shown');
                $(this).find('img').attr('src', '/Content/img/details_close.png');
            }
        });
          var startdate = '@Session["FyearFrom"].ToString()';
        var enddate = '@Session["FyearTo"].ToString()';
        var sd = new Date(startdate);
        var ed = new Date(enddate);

         $("#btnsearch").click(function () {
            var frm = new Date($('#frmdate').val());
            var dto = new Date($('#todate').val());

            showLoading();

            if (frm > dto) {

                $("#error").show();
                hideLoading();
                return false;

            }
            else {
                $("#error").hide();

                location.href = '@Url.Action("IndexAcBook","AccountingModule")?FromDate=' + $('#frmdate').val() + "&ToDate=" + $('#todate').val();
            }
        });
        $("#frmdate").datepicker({
            dateFormat: 'dd-M-yy',
            changeYear: true, changeMonth: true,
            minDate: sd,
            maxDate:ed,

        });


        $("#frmdate").val(GetEndDate());
        $("#todate").val(GetEndDate());

        $("#todate").datepicker({
            dateFormat: 'dd-M-yy',
            changeYear: true, changeMonth: true,
            minDate: sd,
            maxDate:ed,

        });
    });
     function GetCurrentDate() {
        var m_names = new Array("Jan", "Feb", "Mar",
"Apr", "May", "Jun", "Jul", "Aug", "Sep",
"Oct", "Nov", "Dec");

   

            var startdate = '@Session["FyearFrom"].ToString()';
            var enddate = '@Session["FyearTo"].ToString()';
            var sd = new Date(startdate);
            var ed = new Date(enddate);

            var str = new Date(startdate);


            var d = new Date();
            var curr_date = sd.getDate();
            var curr_month = d.getMonth();
            var curr_year = str.getFullYear();
            return ("01" + "-" + m_names[curr_month] + "-" + d.getFullYear());


    }
    function GetEndDate() {
         var m_names = new Array("Jan", "Feb", "Mar",
    "Apr", "May", "Jun", "Jul", "Aug", "Sep",
    "Oct", "Nov", "Dec");

            var startdate = '@Session["FyearFrom"].ToString()';
            var enddate = '@Session["FyearTo"].ToString()';
            var sd = new Date(startdate);
            var ed = new Date(enddate);

            var str = new Date(startdate);


            var d = new Date();
            var curr_date =ed.getDate();
            var curr_month = d.getMonth();
            var curr_year = ed.getFullYear();
            return (d.getDate() + "-" + m_names[curr_month] + "-" + d.getFullYear());


    }
</script>

<section class="content-header">
    <h1 class="headingfont">Cash And Bank Book</h1>

</section>

<div class="m-container">
    <p class="indexbtnpadding flex">
        <div id="error" style="display: none; font-family: 'Montserrat', sans-serif !important; color: red">* From Date must not be Greater than To Date</div>

        <table class="searchtabs tabsser" id="tbl1">

            <tr>

                <td class="searlabel ">
                    From Date
                </td>
                <td class="searinput">
                    <input type="text" id="frmdate" class="form-control text-right" />
                </td>
                <td class="searlabel">
                    To Date
                </td>
                <td class="searinput">
                    <input type="text" id="todate" class="form-control text-right" />
                </td>
                <td style="padding-left:10px;">
                    <input type="button" value="Search" id="btnsearch" class="btn btn-primary btnwidt fa fa-search" />
                </td>
                <td>

                    @if (isadd)
                    {
                        @Html.ActionLink("Create New", "CreateAcBook", null, new { @class = "btn btn-primary btnwidth" })
                    }
                </td>
            </tr>

        </table>


    </p>
</div>
<section class="content">
    @if (ViewBag.SuccessMsg != null)
    {
        <script type="text/javascript">
         $(document).ready(function () {
             $.notify("@ViewBag.SuccessMsg ", "success");
         });
        </script>
    }
    <div class="table-responsive tblbackground" style="padding:15px">
        <table class="table table-responsive table-bordered tblfont" id="dataTables-example">
            <thead>
                <tr>
                    @*  <th>
                             @Html.Label("Transaction Type")
                        </th>
                    *@
                    <th>
                        @Html.Label("Voucher No")
                    </th>
                    <th>
                        @Html.Label("Transaction Date")
                    </th>
                    <th>
                        @Html.Label("Amount")
                    </th>
                    <th>
                        @Html.Label("Remark")
                    </th>
                    <th>Action</th>
                    <th style="display:none;"></th>
                </tr>
            </thead>

            <tfoot>
                <tr>
                    @*  <th>
                             @Html.Label("Transaction Type")
                        </th>*@
                    <th>
                        @Html.Label("Voucher No")
                    </th>
                    <th class="right_text">
                        @Html.Label("Transaction Date")
                    </th>
                    <th class="right_text">
                        @Html.Label("Amount")
                    </th>
                    <th>
                        @Html.Label("Remark")
                    </th>

                    <th>Action</th>
                    <th style="display:none;"></th>
                </tr>
            </tfoot>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="details-control">
                            <img src="/Content/img/details_open.png" id="plus_minus" style="cursor: pointer;" />
                            @Html.DisplayFor(modelItem => item.VoucherNo)
                        </td>
                        <td class="tdtarget">
                            <img src="/Content/img/details_open.png" id="plus_minus" style="cursor: pointer;width:10px;margin:1px;" />
                            @TrueBooksMVC.Models.CommanFunctions.GetShortDateFormat((item.TransDate))
                        </td>
                        <td class="tdtarget textright">
                            @string.Format("{0:n2}", item.Amount)
                        </td>
                        <td class="tdtarget">
                            @Html.DisplayFor(modelItem => item.Remarks)
                        </td>
                        <td>
                            @*  @Html.ActionLink("Edit", "Edit", new { id=item.CountryID }) |
        @Html.ActionLink("Details", "Details", new { id=item.CountryID }) |
        @Html.ActionLink("Delete", "Delete", new { id=item.CountryID })*@
                            @if (ismodify)
                            {
                                <a href="@Url.Action("EditAcBook", new { id = item.AcJournalID })"><i class="fa fa-pencil"></i></a>
                            }
                            <span>&vert; </span>
                            @if (isdelete)
                            {
                                <a href="@Url.Action("DeleteAcBook", new { id = item.AcJournalID })"><i class="fa fa-times"></i></a>
                            }
                            @* <a href="#" onclick="Delete(ID=@item.AcCategoryID)"><i class="fa fa-times"></i></a>*@

                        </td>
                        <td style="display:none;">
                            @item.AcJournalID
                        </td>
                    </tr>
                }
                <//tbody>
        </table>
    </div>
</section>