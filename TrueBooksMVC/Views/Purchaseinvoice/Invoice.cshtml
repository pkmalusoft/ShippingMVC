@model DAL.PurchaseInvoice

@{

    ViewBag.Title = "Purchase Invoice";
    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
    var isadd = true;
    var ismodify = true;

    string path = Request.Url.AbsolutePath.ToLower();

    if (Convert.ToInt32(Session["UserRoleID"]) > 1)
    {
        TrueBooksMVC.Models.SourceMastersModel obj = new TrueBooksMVC.Models.SourceMastersModel();
        isadd = obj.GetAddpermission(Convert.ToInt32(Session["UserRoleID"]), path);
        ismodify = obj.GetModifypermission(Convert.ToInt32(Session["UserRoleID"]), path);

    }
}

<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/dt/dt-1.10.20/datatables.min.css" />
<script src="~/MyJsFiles/PurchaseInvoice.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/v/dt/dt-1.10.20/datatables.min.js"></script>


<style>

    body {
        counter-reset: section;
    }

    i.srno {
        counter-reset: subsection;
    }

        i.srno:before {
            counter-increment: section;
            content: counter(section);
        }

    input, select {
        border-radius: 3px !important;
    }

    .jobform {
        background-color: #fff;
        box-shadow: 0 9px 23px rgba(0, 0, 0, 0.09), 0 5px 5px rgba(0, 0, 0, 0.06) !important;
        border-radius: 25px;
        margin-bottom: 27px;
        padding-top: 14px;
        padding-left: 8px;
        padding-right: 8px;
        width: 96%;
    }

    .discount {
        display: inline-block;
        border: 1px solid;
        padding: 10px;
    }

    .form_invoice {
        background-color: #fff;
        box-shadow: 0 9px 23px rgba(0, 0, 0, 0.09), 0 5px 5px rgba(0, 0, 0, 0.06) !important;
        border-radius: 25px;
        margin-bottom: 27px;
        padding: 20px;
        margin-top: 18px;
    }


    .smalltablewidth {
        width: 100%;
        margin: 0px !important;
    }

    .fulltablewidth {
        max-width: 1371px;
    }

    .table > tbody > tr > td,
    .table > tbody > tr > th,
    .table > tfoot > tr > td,
    .table > tfoot > tr > th,
    .table > thead > tr > td,
    .table > thead > tr > th {
        padding: 1px;
        line-height: 1.42857143;
        vertical-align: middle;
    }

    .no-padding {
        padding: 0px;
    }

    table.dataTable, table.dataTable th, table.dataTable td {
        box-sizing: content-box;
        text-align: center;
        padding: 7px;
        border: 1px solid #eee;
    }

    .delete {
        width: 22px;
    }
</style>
<script src="~/MyJsFiles/PurchaseInvoice.js"></script>





<section class="content-header">
    <h1 class="headingfont">Purchase Invoice<small></small></h1>

</section>

<div class="containers">
    <section class="content jobform">
        <div style="display:none;">
            @Html.DropDownList("Unit", (SelectList)ViewBag.Unit, "Select", new { @class = "Unit_demo_class", id = "Unit", @style = "height: 22px" })
        </div>
        @*<div style="display:none;">
            @Html.DropDownList("AccountHead", (SelectList)ViewBag.AccountHead, "Select", new { @class = "AccountHead_demo_class", @name = "AccountHead", id = "AcHead", @style = "width: 100px; height: 21px;" })
        </div>

        <div style="display:none;">
            @Html.DropDownList("Job", (SelectList)ViewBag.Job, "Select", new { @class = "Job_demo_class", @name = "Job", id = "Job", @style = "width: 100px; height: 21px;" })
        </div>
        <div style="display:none;">
            @Html.DropDownList("Product", (SelectList)ViewBag.Product, "Select", new { @class = "Product_demo_class", @name = "Product", id = "Product", @style = "width: 100px; height: 21px;" })
        </div>
        *@

        @using (@Html.BeginForm())
        {

        @Html.ValidationSummary(true)
        <input type="hidden" id="BranchLocalCurrencyId" name="BranchLocalCurrencyId" value="@Session["BaseCurrencyId"]" />
        @Html.HiddenFor(model => model.PurchaseInvoiceID, new { id = "PurchaseInvoiceID" })
        <div class="row no-margin">
            <div class="col-md-6">
                <label class="headinglabel">Invoice No:</label>
                @Html.TextBoxFor(model => model.PurchaseInvoiceNo, new { @class = "form-control", id = "PurchaseInvoiceNo", @readonly = "readonly" })
            </div>
            <div class="col-md-6">
                <label class="headinglabel">Invoice Date:</label>
                @Html.TextBoxFor(model => model.PurchaseInvoiceDate, "{0:dd-MMM-yyyy}", new { @id = "invoicedate", @class = "form-control" })
            </div>
        </div>
        <div class="row no-margin" style="padding-top: 10px">
            <div class="col-md-6">
                <label class="headinglabel">Supplier:</label>
                <input type="text" id="SupplierID" value="" class="form-control" />
                @Html.HiddenFor(model => model.SupplierID, new { id = "SelectedSupplierID", Name = "SelectedSupplierID" })
            </div>
            <div class="col-md-6">
                <label class="headinglabel">External Reference No:</label>
                @Html.TextBoxFor(model => model.Reference, new { @class = "form-control", id = "Reference", required = "required" })
            </div>
        </div>
        <div class="row no-margin" style="padding-top: 10px">
            <div class="col-md-6">
                <label class="headinglabel">Quotation Number | Date:</label>
                @Html.TextBoxFor(model => model.QuotationNumber, new { @class = "form-control", id = "QuotationNumber", required = "required" })
            </div>
            <div class="col-md-3">
                <label class="headinglabel">Currency:</label>
                <input type="text" id="CurrencyID" value="" class="form-control" />
                @Html.HiddenFor(model => model.CurrencyID, new { id = "SelectedCurrencyID", Name = "SelectedCurrencyID" })
            </div>
            <div class="col-md-3">
                <label class="headinglabel">Exchange Rate :</label>
                @Html.TextBoxFor(model => model.ExchangeRate, new { @class = "form-control ExchangeRate", id = "ExchangeRate", required = "required" })
            </div>
        </div>
        <div class="row no-margin" style="padding-top: 10px">
            <div class="col-md-6">
                <label class="headinglabel">LPO Number | Date:</label>
                @Html.TextBoxFor(model => model.LPOReference, new { @class = "form-control", id = "LPOReference", required = "required" })
            </div>
            <div class="col-md-6">
                <label class="headinglabel">Good Rcvd By:</label>
                <input type="text" id="EmployeeID" value="" class="form-control" />
                @Html.HiddenFor(model => model.EmployeeID, new { id = "SelectedEmployeeID", Name = "SelectedEmployeeID" })
            </div>
        </div>
        <div class="form_invoice">
            <button type="button" class="addmore topbutton btn btn-primary btnwidth">+ Add More</button>
            <button type="button"  class="calc btn btn-primary btnwidth" style="margin:5px;">Calc</button>
            <div class="row no-margin" id="AddCharges" style="padding-top: 10px">
                <div class="col-xs-12 no-padding for-device">
                    <div class="data-table tblsbackground" style="width:100%; padding: 0px;">
                        <div class="data" style="overflow:auto;">
                            <table border="1" class="table table-responsive table-bordered smalltablewidth fulltablewidth" id="charges_table">
                                <tr>
                                    <td width="3%">
                                        S. No
                                    </td>
                                    <td width="12%" class="lc_pro">
                                        Product & Services

                                    </td>
                                    <td width="10%">Description</td>
                                    <td width="3%">
                                        Qty
                                    </td>
                                    <td width="4%">
                                        Unit
                                    </td>
                                  
                                    <td width="4%" class="hideinsummary" title="Local Currency">
                                        Rate LC
                                    </td>
                                    <td width="4%" class="hideinsummary" title="Foreign Currency" style="color:yellow!important" ;>
                                        Rate FC
                                    </td>
                                    <td width="6%" class="hideinsummary" title="Local Currency">
                                        Value LC
                                    </td>
                                    <td width="6%" class="lc_pro" title="Foreign Currency" style="color:yellow!important" ;>
                                        Value FC
                                    </td>
                                    <td width="3%">
                                        Tax%
                                    </td>
                                    <td width="3%">
                                        Tax
                                    </td>
                                    <td width="5%">
                                        NetValue
                                    </td>
                                    <td width="5%">
                                        AccountHead
                                    </td>
                                    <td width="2%" class="lc_pro" style="text-align:center !important">
                                        J
                                    </td>

                                    <td width="2%" class="fc_pro">
                                        Action
                                    </td>
                                </tr>
                                <tr>
                                    <td><span id="snum">1.</span></td>
                                    <td>
                                        <input type="text" id="Product_1_txt" name="Product_1_txt" value="" class="Product" style="width:100%;height: 28px;padding:0px 5px;border: none;" />
                                        <input type="hidden" id="Product_1" name="Product_1" value="" />
                                        <input type="hidden" id="PurchaseInvoiceDetailID_1" name="PurchaseInvoiceDetailID_1" value="0" />
                                    </td>
                                    <td><input type="text" id="Description_1" name="Description_1" style="width:100%;border: none;height: 28px;padding:0px 5px;" /></td>
                                    <td><input type="text" id="Quantity_1" name="Quantity_1" style="width:100%;border: none;height: 28px;padding:0px 5px;" class="QTY" /></td>
                                    <td>
                                        @Html.DropDownList("Unit_1", (SelectList)ViewBag.Unit, "Select", new { @class = "Unit", id = "Unit_1", @name = "Unit_1", @style = "width:100%;border: none;height: 28px;padding:0px;" })
                                    </td>
                                    
                                    <td><input type="text" class="two-decimals Rate" id="Rate_1" name="Rate_1" style="width:100%;border: none; text-align:right;height: 28px;padding:0px 5px;" autocomplete="off" /> </td>
                                    <td><input type="text" class="two-decimals RateFC" id="RateFC_1" name="RateFC_1" style="width:100%;border: none;height: 28px;padding:0px 5px;text-align:right" autocomplete="off" /></td>
                                    <td><input type="text" class="two-decimals Value" id="Value_1" name="Value_1" style="width:100%;border: none; height: 28px;padding:0px 5px;text-align:right" readonly="readonly" /> </td>
                                    <td><input type="text" class="two-decimals ValueFC" id="ValueFC_1" name="ValueFC_1" style="width:100%;border: none;height: 28px;padding:0px 5px;text-align:right" readonly="readonly" /></td>
                                    <td><input type="text" class="two-decimals TaxPercent" id="Taxpre_1" name="Taxpre_1" style="width:100%;border: none;height: 28px;padding:0px 5px; text-align:right" /> </td>
                                    <td><input type="text" class="two-decimals Tax" id="Tax_1" name="Tax_1" style="width:100%;border: none;height: 28px;padding:0px 5px; text-align:right" readonly="readonly" /> </td>
                                    <td><input type="text" class="two-decimals NetValue" id="NetValue_1" name="NetValue_1" style="width:100%;height: 28px;padding:0px 5px;border: none; text-align:right" readonly="readonly" /> </td>
                                    <td>
                                        <input type="hidden" id="AcHead_1" name="AcHead_1" value="" />
                                        <input type="text" id="AcHead_1_txt" name="AcHead_1_txt" value="" class="AccountHead" style="width:100%;height: 28px;padding:0px 5px;border: none; " />
                                    </td>
                                    <td>
                                        <input type="text" id="JobID_1_txt" name="JobID_1_txt" value="" class="Job" style="width:100%;height: 28px;padding:0px 5px;border: none;" />
                                        <input type="hidden" id="JobID_1" name="JobID_1" value="" />
                                    </td>

                                    <td style="white-space:nowrap" class="action_btn"><button type="button" onclick="deleteRow(this)">-</button>&nbsp;&nbsp;<button type="button" index="1" class="addmore">+</button></td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row no-margin" style="padding-top: 10px">
            <div class="col-md-5">
                <label class="headinglabel">Remarks:</label>
                @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control txttarget" })
            </div>
            <div class="col-md-7">
                <div class="col-md-12">
                    <div class="row no-margin" style="padding-top: 10px">
                        <div class="col-md-4" style="text-align: right">
                            <label class="headinglabel">Invoice Total :</label>
                        </div>
                        <div class="col-md-4">
                            <input type="text" class="form-control" id="TotalLC" placeholder=" Local Currencey" name="Local" style="display: inline-block;width: 100%;" />
                        </div>
                        <div class="col-md-4">
                            <input type="text" class="form-control" id="TotalFC" placeholder=" Foreign Currency" name="Foreign" style="display: inline-block; width: 100%;" />
                        </div>
                    </div>
                    <div class="row no-margin" style="padding-top: 10px">
                        <div class="col-md-4" style="text-align: right;">
                            <label class="headinglabel">Add: Tax :</label>
                        </div>
                        <div class="col-md-4">
                            <input type="text" class="form-control Tax_LC" name="Tax_LC" style="display: inline-block; width: 100%;" />
                        </div>
                        <div class="col-md-4">
                            <input type="text" class="form-control Tax_FC" name="Tax_FC" style="display: inline-block; width: 100%;" />
                        </div>

                    </div>
                    <div class="row no-margin" style="padding-top: 10px">
                        <div class="col-md-4 discount_block" style="text-align: center;border: 1px solid;position: relative;">

                            <div class="row no-margin ">
                                <div class="col-md-4" style="padding:0" ;><label style="margin:0;">Discount :</label></div>
                                <div class="col-md-4" style="padding:0">
                                    <label style="margin:0" ; for="DiscountType1"> %&nbsp;<input type="radio" id="DiscountType1" name="DiscountType" value="1" @(Model.DiscountType ==1 || Model.PurchaseInvoiceID ==0 ? "checked='true'" : "" ) /></label>
                                </div>
                                <div class="col-md-4" style="padding:0">
                                    <label style="margin:0" ; for="DiscountType2">Amt&nbsp;<input type="radio" id="DiscountType2" value="2" name="DiscountType" @(Model.DiscountType ==2 ? "checked='true'" : "" ) /></label>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.DiscountValueLC, new { @class = "form-control discountamou two-decimals", id = "discount", name = "discount", style = "display: inline-block;width: 100%;" })

                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.DiscountValueFC, new { @class = "form-control discountamouFC two-decimals", id = "discountFC", name = "discountFC", style = "display: inline-block;width: 100%;" })
                        </div>
                    </div>
                    <div class="row no-margin" style="padding-top: 10px">
                        <div class="col-md-4" style="text-align: center;">
                        </div>
                        <div class="col-md-4">
                            <input type="text" class="form-control TotalValueLC" name="TotalValueLC" id="TotalValueLC" style="display: inline-block;width: 100%;" readonly="readonly" />
                        </div>
                        <div class="col-md-4">
                            <input type="text" class="form-control TotalValueFC" name="TotalValueFC" id="TotalValueFC" style="display: inline-block;width: 100%;" readonly="readonly" />
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row no-margin buttons" style="padding-top: 10px">
            <div class="col-md-12 butdivs">
                @{
                    if (Model.PurchaseInvoiceID > 0)
                    {
                        if (ismodify)
                        {
                            <input type="submit" name="Command" value="Update" class="btn btn-primary btnwidth" />

                        }
                        else
                        {
                            <input type="submit" name="Command" value="Update" class="btn btn-primary btnwidth" disabled />

                        }
                    }
                    else
                    {
                        if (isadd)
                        {
                            <input type="submit" name="Command" value="Save" class="btn btn-primary btnwidth" id="btnSave" />
                        }
                        else
                        {
                            <input type="submit" name="Command" value="Save" class="btn btn-primary btnwidth" id="btnSave" disabled />

                        }
                    }
                }
                &nbsp;
                <a href="@Url.Action("index", "purchaseInvoice" , new { id=0 })" class="btn btn-danger btnwidth">Cancel</a>
                &nbsp;
            </div>
        </div>
        }
    </section>
</div>



<script type="text/javascript">
    $(document).ready(function () {
        var startdate = '@Session["FyearFrom"].ToString()';
        var enddate = '@Session["FyearTo"].ToString()';
        var sd = new Date(startdate);
        var ed = new Date(enddate);
        //CalculateValue();
        var Creditdays = 0;
        var LCExRate = 0;
        GetLocalCurrencyvalue();

        var autocompleteOptions = {
            source: function (request, response) {
                $.ajax({
                    url: '/AutoComplete/AccountHead',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.AcHead,
                                value: val.AcHead,
                                AcHeadID: val.AcHeadID
                            }
                        }))
                    }
                })
            }, minLength: 1,
            select: function (e, i) {
                e.preventDefault();
                
                $(this).val(i.item.label);
                var id = $(this).attr('id');
                id = id.replace("_txt", "");
                $("#" + id).val(i.item.AcHeadID);
            }
        };

        var JobAutoComplete = {
            source: function (request, response) {
                $.ajax({
                    url: '/AutoComplete/Job',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.JobCode,
                                value: val.JobCode,
                                JobID: val.JobID
                            }
                        }))
                    }
                })
            }, minLength: 1,
            select: function (e, i) {
                e.preventDefault();
                
                $(this).val(i.item.label);
                var id = $(this).attr('id');
                id = id.replace("_txt", "");
                $("#" + id).val(i.item.JobID);
            }
        };

        var ProductsAutoComplete = {
            source: function (request, response) {
                $.ajax({
                    url: '/AutoComplete/Products',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        

                        response($.map(data, function (val, item) {
                            return {
                                label: val.ProductName,
                                value: val.ProductName,
                                ProductID: val.ProductID
                            }
                        }))
                    }
                })
            }, minLength: 1,
            select: function (e, i) {
                e.preventDefault();
                
                $(this).val(i.item.label);
                var id = $(this).attr('id');
                id = id.replace("_txt", "");
                $("#" + id).val(i.item.ProductID);
                
            }
        };
        $("#invoicedate").datepicker({
            dateFormat: 'dd-M-yy',
            changeYear: true, changeMonth: true,
            minDate: sd,
            maxDate: ed,
        });
        $("#invoicedate").datepicker("setDate", new Date());

        $(".two-decimals").change(function () {
            this.value = parseFloat(this.value).toFixed(2);
        });
         function GetLocalCurrencyvalue() {
            $.ajax({

                type: "GET",
                url: "/Job/GetExchangeRte",
                datatype: "Json",
                data: { ID: '@Session["BaseCurrencyId"]' },
                success: function (data) {
                    LCExRate = data;
                }
            });
        }
        $("#CurrencyID").change(function () {
            
            $("#ExchangeRate").val('');
            
            $.ajax({

                type: "GET",
                url: "/Job/GetExchangeRte",
                datatype: "Json",
                data: { ID: $('#SelectedCurrencyID').val() },
                success: function (data) {
                    
                    $('#ExchangeRate').val(data);
                    CalculateValue();
                }
            });
        });

        var i = 2;
        var index = 0;
        $("#charges_table").on('click', '.delete', function () {
            $(this).parent().parent().remove();
            CalculateValue();

        });
        function AddNewRow() {
            count = $('#charges_table tr').length;
            //index = $(this).attr('index');
            i = count;
           

            var unitSelect = $('.Unit_demo_class').attr('id', 'Unit_' + i).attr('name', 'Unit_' + i).parent().html().replace("Unit_demo_class", "");
            var AccountHeadSelect = '<input type="hidden" id="AcHead_' + i + '" name="AcHead_' + i + '" value="" /> <input type = "text" id="AcHead_' + i + '_txt" name = "AcHead_' + i + '_txt" value = "" class="AccountHead" style = "width: 100%;border:none; height: 28px;padding:0px 7px;" />';
            var JobSelect = '<input type="hidden" id="JobID_' + i + '" name="JobID_' + i + '" value="" /> <input type = "text" id="JobID_' + i + '_txt" name = "JobID_' + i + '_txt" value = "" class="Job" style = "width: 100%;border:none; height: 28px;padding:0px 7px;" />';
            var ProductSelect = '<input type="hidden" id="Product_' + i + '" name="Product_' + i + '" value="" /><input type="hidden" id="PurchaseInvoiceDetailID_' + i + '" name="PurchaseInvoiceDetailID_' + i + '" value="0" /> <input type = "text" id="Product_' + i + '_txt" name = "Product_' + i + '_txt" value = "" class="Product" style = "width: 100%;border:none; height: 28px;padding:0px 7px;" />';

            var data = "<tr><td><span id='snum" + i + "'>" + count + ".</span></td>";
            data += "<td>" + ProductSelect + "</td><td><input type='text' id='Description_" + i + "' name='Description_" + i + "' style='width: 100%;border:none;height: 28px;padding:0px 7px;'/></td> <td><input type='text' id='Quantity_" + i + "' name='Quantity_" + i + "' style='width: 100%;border:none;height: 28px;padding:0px 7px;' class='QTY'/></td><td>" + unitSelect + "</td><td><input type='text' id='Rate_" + i + "' name='Rate_" + i + "'style='width: 100%;height: 28px;padding:0px 7px;border:none;text-align:right' class='two-decimals Rate' autocomplete='off' /></td><td> <input type='text' id='RateFC_" + i + "' name='RateFC_" + i + "' style='width: 100%;height: 28px;padding:0px 7px;border:none;text-align:right' class='two-decimals RateFC' autocomplete='off'/></td><td><input type='text' id='Value_" + i + "' name='Value_" + i + "' style='width: 100%;height: 28px;padding:0px 7px;border:none;text-align:right' class='two-decimals Value' readonly='readonly' /></td><td><input type='text' id='ValueFC_" + i + "' name='ValueFC_" + i + "' style='width: 100%;height: 28px;padding:0px 7px;border:none;text-align:right' class='two-decimals ValueFC' readonly='readonly'/></td><td><input type='text' id='Taxpre_" + i + "' name='Taxpre_" + i + "' style='width: 100%;height: 28px;padding:0px 7px;border:none;text-align:right' class='two-decimals TaxPercent'/></td><td><input type='text' id='Tax_" + i + "' name='Tax_" + i + "' style='width: 100%;border:none;height: 28px;padding:0px 7px;text-align:right'class='two-decimals Tax' readonly='readonly'/></td><td><input type='text' id='NetValue_" + i + "' name='NetValue_" + i + "' style='width: 100%;height: 28px;padding:0px 7px;border:none; text-align:right' class='two-decimals NetValue' readonly='readonly'/></td><td>" + AccountHeadSelect + "</td><td>" + JobSelect + "</td><td><button type='button' class='delete' >-</button>&nbsp;&nbsp;<button type='button' index='" + i + "' class='addmore'>+</button></td></tr>"
            $('#charges_table').append(data);
            $("#charges_table").attr('index', i);

            $('#AcHead_' + i + '_txt').focus().autocomplete(autocompleteOptions);
            $('#JobID_' + i + '_txt').focus().autocomplete(JobAutoComplete);
            $('#Product_' + i + '_txt').focus().autocomplete(ProductsAutoComplete);
            //$('#Description_' + i).focus();
            //$('#Product_' + i + '_txt').focus();
            //$('#SupplierID').focus();

            CalculateValue();
            $('.QTY').on('change', function () {
                CalculateValue();
            });
        }
        $("#charges_table").on('click', '.addmore', function () {
            AddNewRow();
        });

        $(".topbutton").on('click', function () {
            AddNewRow();
        });



        var InvoiceId = $('#PurchaseInvoiceID').val();
        if (InvoiceId != 0 && InvoiceId != "") {
            var totalval = 0;
            var tottax = 0;
            var netval = 0;
            $('#SupplierID').attr('readonly', 'readonly');
            $.ajax({
                type: "GET",
                url: "/PurchaseInvoice/GetPurchaseInvoiceDetailsByInvoiceId",
                datatype: "Json",
                data: { InvoiceId: $('#PurchaseInvoiceID').val() },
                success: function (data) {
                    
                    if (data.length > 0) {
                        $('#charges_table tr:nth-child(2)').remove();
                    }

                    count = $('#charges_table tr').length;
                    index = $(this).attr('index');
                    i = count;

                    var vInvoiceDetails = JSON.parse('[]');
                    for (var i = 0; i < data.length; i++) {
                        var InvoiceDetailsObj = data[i];
                        var InvoiceDetailStr = JSON.stringify(InvoiceDetailsObj);
                        vInvoiceDetails.push(InvoiceDetailStr);
                        var taxpercent = 0;
                        var unitSelect = $('.Unit_demo_class').attr('id', 'Unit_' + i).attr('name', 'Unit_' + i).parent().html().replace("Unit_demo_class", "");
                        var AccountHeadSelect = '<input type="hidden" id="AcHead_' + i + '" name="AcHead_' + i + '" value="' + InvoiceDetailsObj.AcHeadID + '" /> <input type = "text" id="AcHead_' + i + '_txt" name = "AcHead_' + i + '_txt" value = "' + InvoiceDetailsObj.AcHead + '" class="AccountHead ui-autocomplete-input" style = "width: 100%;border:none;height: 28px;padding:0px 7px;" />';
                        var JobSelect = '<input type="hidden" id="JobID_' + i + '" name="JobID_' + i + '" value="' + InvoiceDetailsObj.JobID + '" /> <input type = "text" id="JobID_' + i + '_txt" name = "JobID_' + i + '_txt" value = "' + InvoiceDetailsObj.JobCode + '" class="Job" style = "width: 100%;border:none;height: 28px;padding: 0px 7px;" />';
                        var ProductSelect = '<input type="hidden" id="Product_' + i + '" name="Product_' + i + '" value="' + InvoiceDetailsObj.ProductID + '" /> <input type="hidden" id="PurchaseInvoiceDetailID_' + i + '" name="PurchaseInvoiceDetailID_' + i + '" value="' + InvoiceDetailsObj.PurchaseInvoiceDetailID + '" /> <input type = "text" id="Product_' + i + '_txt" name = "Product_' + i + '_txt" value = "' + InvoiceDetailsObj.ProductName + '" class="Product" style = "width: 100%;border:none;height: 28px;padding:0px 7px;" />';
                        var tdata = "<tr><td><span id='snum" + i + "'>" + parseInt(parseInt(i) + 1) + ".</span></td>";
                        tdata += "<td>" + ProductSelect + "</td><td><input type='text' id='Description_" + i + "' name='Description_" + i + "' style='width: 100%;height: 28px;padding:0px 7px;border:none' value='" + InvoiceDetailsObj.Description + "' /></td ><td><input type='text' id='Quantity_" + i + "' name='Quantity_" + i + "' style='width: 100%;height: 28px;padding:0px 7px;border:none' value='" + InvoiceDetailsObj.Quantity + "' class='QTY' /></td><td>" + unitSelect + "</td> <td><input type='text' id='Rate_" + i + "' name='Rate_" + i + "' style='width: 100%;height: 28px;padding:0px 7px;border:none;text-align:right' value='" + parseFloat(InvoiceDetailsObj.Rate).toFixed(2) + "' class='two-decimals Rate' autocomplete='off' /></td><td><input type='text' id='RateFC_" + i + "' name='RateFC_" + i + "' style='width: 100%;height: 28px;padding:0px 7px;border:none;text-align:right' value='" + parseFloat(InvoiceDetailsObj.RateFC).toFixed(2) + "' class='two-decimals RateFC'  autocomplete='off' /></td><td><input type='text' id='Value_" + i + "' name='Value_" + i + "' style='width: 100%;height: 28px;padding:0px 7px;border:none;text-align:right' value='" + parseFloat(InvoiceDetailsObj.Value).toFixed(2) + "' class='two-decimals Value' readonly='readonly' /></td><td><input type='text' id='ValueFC_" + i + "' name='ValueFC_" + i + "' style='width: 100%;height: 28px;padding:0px 7px;border:none;text-align:right' value='" + parseFloat(InvoiceDetailsObj.ValueFC).toFixed(2) + "' class='two-decimals ValueFC' readonly='readonly' /></td><td><input type='text' id='Taxpre_" + i + "' name='Taxpre_" + i + "' value='" + parseFloat(InvoiceDetailsObj.Taxprec).toFixed(2) + "' style='width: 100%;height: 28px;padding:0px 7px;border:none;text-align:right' class='two-decimals TaxPercent'/></td><td><input type='text' id='Tax_" + i + "' name='Tax_" + i + "' style='width: 100%;height: 28px;padding:0px 7px;border:none;text-align:right' value='" + parseFloat(InvoiceDetailsObj.Tax).toFixed(2) + "' class='two-decimals Tax' readonly='readonly' /></td><td><input type='text' id='NetValue_" + i + "' name='NetValue_" + i + "' style='width: 100%;height: 28px;padding:0px 7px;border:none;text-align:right' value='" + parseFloat(InvoiceDetailsObj.NetValue).toFixed(2) + "' class='two-decimals NetValue' readonly='readonly' /></td><td>" + AccountHeadSelect + "</td><td>" + JobSelect + "</td><td><button type='button' class='delete' >-</button>&nbsp;&nbsp;<button type='button' index='" + i + "' class='addmore'>+</button></td></tr > "

                        $('#charges_table').append(tdata);
                        $('#charges_table').find('#Unit_' + i).val(InvoiceDetailsObj.ItemUnitID);
                        $('#charges_table').find('#AcHead_' + i).val(InvoiceDetailsObj.AcHeadID);
                        $('#charges_table').find('#Job_' + i).val(InvoiceDetailsObj.JobID);
                        $('#charges_table').find('#Product_' + i).val(InvoiceDetailsObj.ProductID);
                        $('#AcHead_' + i + '_txt').focus().autocomplete(autocompleteOptions);
                        $('#JobID_' + i + '_txt').focus().autocomplete(JobAutoComplete);
                        $('#Product_' + i + '_txt').focus().autocomplete(ProductsAutoComplete);
                        $('#invoicedate').focus();
                        var CurrencyId = $('#SelectedCurrencyID').val();
                        var BranchLocalCurrencyId = $('#BranchLocalCurrencyId').val();
                        if (CurrencyId == BranchLocalCurrencyId) {
                            totalval = totalval + InvoiceDetailsObj.Value;
                            //var tp = InvoiceDetailsObj.ValueLC / InvoiceDetailsObj.Value;


                        } else {
                            totalval = totalval + InvoiceDetailsObj.ValueFC;
                            //var tp = InvoiceDetailsObj.Tax;


                        }
                        tottax = tottax + InvoiceDetailsObj.Tax;
                        netval = netval + InvoiceDetailsObj.NetValue;
                    }
                     var CurrencyId = $('#SelectedCurrencyID').val();
                    var BranchLocalCurrencyId = $('#BranchLocalCurrencyId').val();
                    if (CurrencyId == BranchLocalCurrencyId) {
                        $("#TotalFC").attr('readonly', 'readonly');
                        $(".Tax_FC").attr('readonly', 'readonly');
                        $("#discountFC").attr('readonly', 'readonly');
                        $("#TotalValueFC").attr('readonly', 'readonly');
                        $('#TotalLC').val(totalval);
                        $('.Tax_LC').val(tottax);
                        $('#TotalValueLC').val(netval);
                        $('#discount').val('@Model.DiscountValueLC');
                    } else {
                        $("#TotalLC").attr('readonly', 'readonly');
                        $(".Tax_LC").attr('readonly', 'readonly');
                        $("#TotalValueLC").attr('readonly', 'readonly');
                        $("#discount").attr('readonly', 'readonly');
                        $('#TotalFC').val(totalval);
                        $('.Tax_FC').val(tottax);
                        $('#TotalValueFC').val(netval);
                        $('#discountFC').val('@Model.DiscountValueFC');
                    }
                    $('#SalesInvoiceNo').focus();
                    //$('#DueDate').focus();
                    $('#SalesInvoiceDate').focus();
                    //$('#SalesInvoiceNo').focus();
                    $("#SalesInvoiceDate").datepicker();
                    $('.QTY').on('change', function () {
                        CalculateValue();
                    });
                    Edit_calculate();
                    //CalculateValue();
                }

            });
        }
        function Edit_calculate() {
            $('#charges_table').find('.Tax').attr('readonly', 'readonly');
            //$('#charges_table').find('.TaxPercent').attr('readonly', 'readonly');
            var trCount = $('#charges_table tr').length;
            var CurrencyId = $('#SelectedCurrencyID').val();
            var BranchLocalCurrencyId = $('#BranchLocalCurrencyId').val();
            var ExRate = $('.ExchangeRate').val();

            var TotalValueLC = 0;
            $('.Value').each(function (i, obj) {
                var ValueLc = $(this).val();
                if (isNaN(parseInt(ValueLc))) {
                    ValueLc = 0;
                }
                TotalValueLC = TotalValueLC + parseFloat(ValueLc);
            });


            $('#TotalLC').val(parseFloat(TotalValueLC).toFixed(2));

            var TotalValueFC = 0;
            $('.ValueFC').each(function (i, obj) {
                var ValueFc = $(this).val();
                if (isNaN(parseInt(ValueFc))) {
                    ValueFc = 0;
                }
                TotalValueFC = TotalValueFC + parseFloat(ValueFc);
            });

            $('#TotalFC').val(parseFloat(TotalValueFC).toFixed(2));

            var TotalTaxLC = 0;
            $('.Tax').each(function (i, obj) {
                var ValueTax_LC = $(this).val();
                if (isNaN(parseInt(ValueTax_LC))) {
                    ValueTax_LC = 0;
                }
                TotalTaxLC = TotalTaxLC + parseFloat(ValueTax_LC);
            });
            var TotalTaxFC = 0;
            $('.Tax').each(function (i, obj) {
                var ValueTax_FC = $(this).val();
                if (isNaN(parseInt(ValueTax_FC))) {
                    ValueTax_FC = 0;
                }
                TotalTaxFC = TotalTaxFC + parseFloat(ValueTax_FC);
            });
            if (BranchLocalCurrencyId == CurrencyId) {

            } else {

                TotalTaxLC = TotalTaxLC * ExRate;
            }
            $('.Tax_LC').val(parseFloat(TotalTaxLC).toFixed(2));
            $('.Tax_FC').val(parseFloat(TotalTaxFC).toFixed(2));

            var DiscountType = $('input[name=DiscountType]:checked').val();
            var discount = $('#discount').val();
            var discountFC = $('#discountFC').val();
            if (isNaN(parseInt(discount))) {
                discount = 0;
            }

            if (isNaN(parseInt(discountFC))) {
                discountFC = 0;
            }
            if (DiscountType == 1) {
                if (BranchLocalCurrencyId == CurrencyId) {
                    TotalValueLC = TotalValueLC + TotalTaxLC - (TotalValueLC * (discount / 100));

                } else {
                    TotalValueLC = TotalValueLC + TotalTaxLC - (TotalValueLC * (discountFC / 100));
                    $('#discount').val(discountFC);
                }

                TotalValueFC = TotalValueFC + TotalTaxFC - (TotalValueFC * (parseInt(discountFC) / 100));
                $('#TotalValueLC').val(parseFloat(TotalValueLC).toFixed(2));
                $('#TotalValueFC').val(parseFloat(TotalValueFC).toFixed(2));
            } else {

                if (BranchLocalCurrencyId == CurrencyId) {
                    $('#TotalValueLC').val(parseFloat((TotalValueLC + TotalTaxLC) - discount).toFixed(2));

                } else {
                    var discount_amnt = discountFC * ExRate;
                    $('#TotalValueLC').val(parseFloat((TotalValueLC + TotalTaxLC) - discount_amnt).toFixed(2));
                    $('#discount').val(discount_amnt);

                }
                $('#TotalValueFC').val(parseFloat((TotalValueFC + TotalTaxFC) - parseInt(discountFC)).toFixed(2));
            }

            if (BranchLocalCurrencyId == CurrencyId) {
                $('#TotalValueFC').val('0.00');
                $('.Tax_FC').val('0.00');
                $('#discountFC').val('0.00');
                $('#TotalFC').val('0.00');

            }

        }
        $("#charges_table").on('change', '.two-decimals', function () {
            var decValue = parseFloat(this.value).toFixed(2);
            if (isNaN(parseInt(decValue))) {
                decValue = '0.00';
            }
            this.value = decValue;
        });

        $('#CurrencyID').on('change', function () {
            CalculateValue();
        });

        $('#ExchangeRate').on('change', function () {
            CalculateValue();
        });

        $('#charges_table').on('change', '.Tax', function () {
            CalculateValue();
        });

        $("#charges_table").on('change', '.Rate', function () {
            CalculateValue();
        });

        $("#charges_table").on('change', '.RateFC', function () {
            CalculateValue();
        });

        $('#charges_table').on('change', '.discountamou', function () {
            CalculateValue();
        });

        $('#charges_table').on('change', '.TaxPercent', function () {
            CalculateValue();
        });

        $('input[name=DiscountType]').on('change', function () {
            CalculateValue();
        });

        $('#discount').on('change', function () {
            CalculateValue();
        });

        $('#discountFC').on('change', function () {
            CalculateValue();
        });

        $('.QTY').on('change', function () {
            CalculateValue();
        });
        $('.calc').on('click', function () {
            CalculateValue();
        });
        $("#charges_table").on('change', '.RateFC', function () {
            var name = this.name;
            var rowval = name.split('_');
            var ExRate = $('.ExchangeRate').val();
            var new_RateLc = this.value * ExRate;
            $('#Rate_' + rowval[1]).val(new_RateLc);
            CalculateValue();
        });
        $("#charges_table").on('change', '.Rate', function () {
            var name = this.name;
            var rowval = name.split('_');
            var ExRate = $('.ExchangeRate').val();
            var new_RateLc = this.value / ExRate;
            $('#RateFC_' + rowval[1]).val(parseFloat(new_RateLc).toFixed(2));
            CalculateValue();
        });
        $('.RateT').on('change', function () {
            var trCount = $('#charges_table tr').length;
            var CurrencyId = $('#SelectedCurrencyID').val();
            var BranchLocalCurrencyId = $('#BranchLocalCurrencyId').val();
            for (i = 1; i <= trCount; i++) {
                if (BranchLocalCurrencyId == CurrencyId) {
                    $('#charges_table tr:nth-child(' + i + ')').find('.Rate').focus();
                } else {
                    $('#charges_table tr:nth-child(' + i + ')').find('.RateFC').focus();

                }
            }
        });
      
        function CalculateValue_old() {
            
            var trCount = $('#charges_table tr').length;
            var TotalCount = 0;
            var TotalCounts = 0;
            var rates = $('.Rate').val();
            trCount = trCount + 1;
            var NetValue = 0;
            var Tax = 0;
            var CurrencyId = $('#SelectedCurrencyID').val();
            var BranchLocalCurrencyId = $('#BranchLocalCurrencyId').val();
            var TaxPercentage = 5;

            var ExRate = $('#ExchangeRate').val();
            for (i = 2; i < trCount; i++) {

                var Qty = $('#charges_table tr:nth-child(' + i + ')');
                Qty = $(Qty).find('.QTY').val();
                if (isNaN(parseInt(Qty))) {
                    Qty = 0;
                }
                var Rate = $('#charges_table tr:nth-child(' + i + ')').find('.Rate').val();
                var RateFC = $('#charges_table tr:nth-child(' + i + ')').find('.RateFC').val();
                TaxPercentage = $('#charges_table tr:nth-child(' + i + ')').find('.TaxPercent').val();

                if (isNaN(parseInt(TaxPercentage))) {
                    TaxPercentage = 0;
                    $('#charges_table tr:nth-child(' + i + ')').find('.TaxPercent').val('0.00');
                }
                if (isNaN(parseInt(Rate))) {
                    Rate = 0;
                }
                if (isNaN(parseInt(RateFC))) {
                    RateFC = 0;
                }
                
                if (BranchLocalCurrencyId == CurrencyId) {
                    $('.RateFC').attr('readonly', 'readonly');
                    $('.RateFC').val('0.00');
                    $('.Rate').removeAttr('readonly');
                    $('.Rate').val(ExRate);
                    Rate = $('#charges_table tr:nth-child(' + i + ')').find('.Rate').val();
                    if (isNaN(parseInt(Rate))) {
                        Rate = 0;
                    }
                    TotalValue = (Qty * Rate);
                    TotalValue = parseFloat(TotalValue).toFixed(2);
                    $('#charges_table tr:nth-child(' + i + ')').find('.Value').val(TotalValue);
                    $('#charges_table tr:nth-child(' + i + ')').find('.ValueFC').val('0.00');
                    Tax = parseFloat(TotalValue * (TaxPercentage / 100)).toFixed(2);
                    if (isNaN(parseInt(Tax))) {
                        Tax = 0.00;
                        $('#charges_table tr:nth-child(' + i + ')').find('.Tax').val('0.00');
                    } else {
                        $('#charges_table tr:nth-child(' + i + ')').find('.Tax').val(Tax);
                    }

                    NetValue = (Qty * Rate) + Tax;
                    NetValue = parseFloat(NetValue).toFixed(2);
                    TotalCount = TotalCount + NetValue;
                    $('#charges_table tr:nth-child(' + i + ')').find('.NetValue').val(NetValue);
                    $("#TotalFC").attr('readonly', 'readonly');
                    $(".Tax_FC").attr('readonly', 'readonly');
                    $("#discountFC").attr('readonly', 'readonly');
                    $("#TotalLC").removeAttr('readonly');
                    $(".Tax_LC").removeAttr('readonly');
                    $("#discountLC").removeAttr('readonly');
                }
                else {
                    $('.Rate').attr('readonly', 'readonly');
                    $('.RateFC').removeAttr('readonly');
                    $('.Rate').val('0.00');
                    $('.RateFC').val(ExRate);
                    RateFC = $('#charges_table tr:nth-child(' + i + ')').find('.RateFC').val();
                    if (isNaN(parseInt(RateFC))) {
                        RateFC = 0;
                    }
                    TotalValue = (Qty * RateFC);
                    TotalValue = parseFloat(TotalValue).toFixed(2);
                    $('#charges_table tr:nth-child(' + i + ')').find('.ValueFC').val(TotalValue);
                    TotalValue = parseFloat(TotalValue * ExRate).toFixed(2);
                    $('#charges_table tr:nth-child(' + i + ')').find('.Value').val('0.00');
                    Tax = parseFloat(TotalValue * (TaxPercentage / 100)).toFixed(2);
                    if (isNaN(parseInt(Tax))) {
                        Tax = 0.00;
                        $('#charges_table tr:nth-child(' + i + ')').find('.Tax').val('0.00');
                    } else {
                        $('#charges_table tr:nth-child(' + i + ')').find('.Tax').val(Tax);
                    }

                    NetValue = parseFloat(TotalValue) + parseFloat(Tax);
                    NetValue = parseFloat(NetValue).toFixed(2);
                    $('#charges_table tr:nth-child(' + i + ')').find('.NetValue').val(NetValue);
                    $("#TotalLC").attr('readonly', 'readonly');
                    $(".Tax_LC").attr('readonly', 'readonly');
                    $("#discountLC").attr('readonly', 'readonly');
                    $("#TotalFC").removeAttr('readonly');
                    $(".Tax_FC").removeAttr('readonly');
                    $("#discountFC").removeAttr('readonly');
                }
            }
            var TotalValue = 0;
            $('.Value').each(function (i, obj) {
                var Value = $(this).val();
                if (isNaN(parseInt(Value))) {
                    Value = 0;
                }
                TotalValue = TotalValue + parseFloat(Value);
            });


            $('#TotalLC').val(parseFloat(TotalValue).toFixed(2));

            var TotalValueFC = 0;
            $('.ValueFC').each(function (i, obj) {
                var ValueFc = $(this).val();
                if (isNaN(parseInt(ValueFc))) {
                    ValueFc = 0;
                }
                TotalValueFC = TotalValueFC + parseFloat(ValueFc);
            });

            $('#TotalFC').val(parseFloat(TotalValueFC).toFixed(2));

            var TotalTaxLC = 0;
            $('.Tax').each(function (i, obj) {
                var ValueTax_LC = $(this).val();
                if (isNaN(parseInt(ValueTax_LC))) {
                    ValueTax_LC = 0;
                }
                TotalTaxLC = TotalTaxLC + parseFloat(ValueTax_LC);
            });
            $('.Tax_LC').val(parseFloat(TotalTaxLC).toFixed(2));
            $('.Tax_FC').val('0.00');

            TotalTaxFC = 0;

            var DiscountType = $('input[name=DiscountType]:checked').val();
            var discount = $('#discount').val();
            var discountFC = $('#discountFC').val();
            if (isNaN(parseInt(discount))) {
                discount = 0;
            }
            if (isNaN(parseInt(discountFC))) {
                discountFC = 0;
            }
            if (DiscountType == 1) {
                TotalValueLC = TotalValue + TotalTaxLC - (TotalValue * (discount / 100));
                TotalValueFC = TotalValueFC + TotalTaxFC - (TotalValueFC * (discountFC / 100));
                $('#TotalValueLC').val(parseFloat(TotalValueLC).toFixed(2));
                $('#TotalValueFC').val(parseFloat(TotalValueFC).toFixed(2));
            } else {
                $('#TotalValueLC').val(parseFloat((TotalValue + TotalTaxLC) - discount).toFixed(2));
                $('#TotalValueFC').val(parseFloat(TotalValueFC - discountFC).toFixed(2));
            }
        }
        function CalculateValue() {
            var trCount = $('#charges_table tr').length;
            var TotalCount = 0;
            var TotalCounts = 0;
            trCount = trCount + 1;
            var NetValue = 0;
            var Tax = 0;
            var CurrencyId = $('#SelectedCurrencyID').val();
            var BranchLocalCurrencyId = $('#BranchLocalCurrencyId').val();
            var TaxPercentage = 5;

            var ExRate = $('.ExchangeRate').val();
            for (i = 2; i < trCount; i++) {

                var Qty = $('#charges_table tr:nth-child(' + i + ')');
                Qty = $(Qty).find('.QTY').val();
                if (isNaN(parseInt(Qty))) {
                    Qty = 0;
                }
                var Ratetypeval;
                var RateLC = $('#charges_table tr:nth-child(' + i + ')').find('.Rate').val();
                var RateFC = $('#charges_table tr:nth-child(' + i + ')').find('.RateFC').val();
                $('#charges_table').find('.Tax').attr('readonly', 'readonly');
                //$('#charges_table').find('.TaxPercent').attr('readonly', 'readonly');
                TaxPercentage = $('#charges_table tr:nth-child(' + i + ')').find('.TaxPercent').val();
                if (isNaN(parseInt(TaxPercentage))) {
                    TaxPercentage = 0;
                    $('#charges_table tr:nth-child(' + i + ')').find('.TaxPercent').val('0.00');
                }
                if (isNaN(parseInt(RateLC))) {
                    RateLC = 0;
                    Ratetypeval = RateLC;

                } else {
                    Ratetypeval = RateLC;
                }
                //if (parseInt(RateLC) != 0) {
                //    Ratetypeval = RateLC;
                //}
                if (isNaN(parseInt(RateFC))) {
                    RateFC = 0;
                }
                //if (parseInt(RateFC) != 0) {
                //    Ratetypeval = RateFC;
                //}
                if (isNaN(parseInt(Ratetypeval))) {
                    Ratetypeval = 0;
                }
                if (BranchLocalCurrencyId == CurrencyId) {
                    $('.RateFC').attr('readonly', 'readonly');
                    $('#charges_table tr:nth-child(' + i + ')').find('.RateFC').val('0.00')
                    $('#charges_table tr:nth-child(' + i + ')').find('.ValueFC').val('0.00')

                    $('.Rate').removeAttr('readonly');
                    //$('.RateLC').val(Ratetypeval);
                    $('#charges_table tr:nth-child(' + i + ')').find('.Rate').val(parseFloat(Ratetypeval).toFixed(2));

                    RateLC = $('#charges_table tr:nth-child(' + i + ')').find('.Rate').val();

                    if (isNaN(parseInt(RateLC))) {
                        RateLC = 0;
                    }
                    TotalValue = (Qty * RateLC);
                    TotalValue = parseFloat(TotalValue).toFixed(2);
                    $('#charges_table tr:nth-child(' + i + ')').find('.Value').val(TotalValue);
                    $('#charges_table tr:nth-child(' + i + ')').find('.ValueFC').val('0.00');

                    Tax = parseFloat(TotalValue * (TaxPercentage / 100)).toFixed(2);
                    if (isNaN(parseInt(Tax))) {
                        Tax = 0.00;
                    }
                    $('#charges_table tr:nth-child(' + i + ')').find('.Tax').val(parseFloat(Tax).toFixed(2));
                    NetValue = (Qty * RateLC) + parseFloat(Tax);
                    NetValue = parseFloat(NetValue).toFixed(2);
                    TotalCount = TotalCount + NetValue;
                    $('#charges_table tr:nth-child(' + i + ')').find('.NetValue').val(NetValue);
                    $("#TotalFC").attr('readonly', 'readonly');
                    $(".Tax_FC").attr('readonly', 'readonly');
                    $("#discountFC").attr('readonly', 'readonly');
                    $("#TotalValueFC").attr('readonly', 'readonly');

                    $("#TotalValueLC").removeAttr('readonly');
                    $("#TotalLC").removeAttr('readonly');
                    $(".Tax_LC").removeAttr('readonly');
                    $("#discount").removeAttr('readonly');
                }
                else {
                    //ExRate = parseFloat(parseFloat(Ratetypeval) * parseFloat(LCExRate)).toFixed(2);
                    //$('.RateLC').attr('readonly', 'readonly');
                    $('.RateFC').removeAttr('readonly');
                    $('#charges_table tr:nth-child(' + i + ')').find('.Rate').val(parseFloat(Ratetypeval).toFixed(2));
                    var value_Lc = parseFloat(Ratetypeval) * Qty;
                    $('#charges_table tr:nth-child(' + i + ')').find('.Value').val(parseFloat(value_Lc).toFixed(2));
                    var exchangerate = parseFloat(Ratetypeval) / ExRate;


                    //$('.RateFC').val(parseFloat(Ratetypeval).toFixed(2));
                    RateFC = $('#charges_table tr:nth-child(' + i + ')').find('.RateFC').val();
                    if (isNaN(parseInt(RateFC))) {
                        RateFC = 0;
                    }
                    if (parseInt(RateFC) == 0) {
                        $('#charges_table tr:nth-child(' + i + ')').find('.RateFC').val(parseFloat(exchangerate).toFixed(2))

                    }
                    if (parseInt(RateFC) == parseInt(RateLC)) {
                        $('#charges_table tr:nth-child(' + i + ')').find('.RateFC').val(parseFloat(exchangerate).toFixed(2))

                    }
                    RateFC = $('#charges_table tr:nth-child(' + i + ')').find('.RateFC').val();

                    RateLC = $('#charges_table tr:nth-child(' + i + ')').find('.Rate').val();
                    if (isNaN(parseInt(RateLC))) {
                        RateLC = 0;
                    }
                    var new_RateLc = RateFC * ExRate;
                    //$('#charges_table tr:nth-child(' + i + ')').find('.RateLC').val(parseFloat(new_RateLc).toFixed(2));

                    RateLC = $('#charges_table tr:nth-child(' + i + ')').find('.Rate').val();

                    var new_valueFc = (parseInt(RateFC) * Qty);
                    var new_valueLc = (parseInt(RateLC) * Qty);
                    var tval0 = (parseInt(RateLC) * exchangerate);
                    //alert(parseFloat(tval0).toFixed(2));
                    var tval1 = (Qty * parseInt(tval0));
                    //alert(parseFloat(tval1).toFixed(2))
                    var exchangeval = parseFloat(tval0).toFixed(2);
                    TotalValue = (Qty * parseInt(exchangeval));
                    TotalValue = parseFloat(TotalValue).toFixed(2);
                    tval1 = parseFloat(new_valueFc).toFixed(2);

                    //$('#charges_table tr:nth-child(' + i + ')').find('.ValueFC').val(tval1);
                    $('#charges_table tr:nth-child(' + i + ')').find('.ValueFC').val(tval1);
                    //TotalValue = parseFloat(TotalValue * LCExRate).toFixed(2);
                    $('#charges_table tr:nth-child(' + i + ')').find('.Value').val(parseFloat(new_valueLc).toFixed(2));

                    var localtax = parseFloat(new_valueLc * (TaxPercentage / 100)).toFixed(2);
                    Tax = parseFloat(localtax / ExRate).toFixed(2);
                    //Tax = parseFloat(tval1 * (TaxPercentage / 100)).toFixed(2);
                    if (isNaN(parseInt(Tax))) {
                        Tax = 0.00;
                    }
                    $('#charges_table tr:nth-child(' + i + ')').find('.Tax').val(Tax);

                    NetValue = parseFloat(tval1) + parseFloat(Tax);
                    NetValue = parseFloat(NetValue).toFixed(2);
                    $('#charges_table tr:nth-child(' + i + ')').find('.NetValue').val(NetValue);
                   
                    $("#TotalLC").attr('readonly', 'readonly');
                    $(".Tax_LC").attr('readonly', 'readonly');
                    $("#TotalValueLC").attr('readonly', 'readonly');
                    $("#discount").attr('readonly', 'readonly');

                    $("#TotalFC").removeAttr('readonly');
                    $(".Tax_FC").removeAttr('readonly');
                    $("#discountFC").removeAttr('readonly');
                    $("#TotalValueFC").removeAttr('readonly');
                }
            }
            var TotalValueLC = 0;
            $('.Value').each(function (i, obj) {
                var ValueLc = $(this).val();
                if (isNaN(parseInt(ValueLc))) {
                    ValueLc = 0;
                }
                TotalValueLC = TotalValueLC + parseFloat(ValueLc);
            });


            $('#TotalLC').val(parseFloat(TotalValueLC).toFixed(2));

            var TotalValueFC = 0;
            $('.ValueFC').each(function (i, obj) {
                var ValueFc = $(this).val();
                if (isNaN(parseInt(ValueFc))) {
                    ValueFc = 0;
                }
                TotalValueFC = TotalValueFC + parseFloat(ValueFc);
            });

            $('#TotalFC').val(parseFloat(TotalValueFC).toFixed(2));

            var TotalTaxLC = 0;
            $('.Tax').each(function (i, obj) {
                var ValueTax_LC = $(this).val();
                if (isNaN(parseInt(ValueTax_LC))) {
                    ValueTax_LC = 0;
                }
                TotalTaxLC = TotalTaxLC + parseFloat(ValueTax_LC);
            });
            var TotalTaxFC = 0;
            $('.Tax').each(function (i, obj) {
                var ValueTax_FC = $(this).val();
                if (isNaN(parseInt(ValueTax_FC))) {
                    ValueTax_FC = 0;
                }
                TotalTaxFC = TotalTaxFC + parseFloat(ValueTax_FC);
            });
            if (BranchLocalCurrencyId == CurrencyId) {

            } else {

                TotalTaxLC = TotalTaxLC * ExRate;
            }
            $('.Tax_LC').val(parseFloat(TotalTaxLC).toFixed(2));
            $('.Tax_FC').val(parseFloat(TotalTaxFC).toFixed(2));

            var DiscountType = $('input[name=DiscountType]:checked').val();
            var discount = $('#discount').val();
            var discountFC = $('#discountFC').val();
            if (isNaN(parseInt(discount))) {
                discount = 0;
            }

            if (isNaN(parseInt(discountFC))) {
                discountFC = 0;
            }
            //if (DiscountType == 1) {
            //    TotalValueLC = TotalValueLC + TotalTaxLC - (TotalValueLC * (discount / 100));
            //    TotalValueFC = TotalValueFC + TotalTaxFC - (TotalValueFC * (parseInt(discountFC) / 100));
            //    $('#TotalValueLC').val(parseFloat(TotalValueLC).toFixed(2));
            //    $('#TotalValueFC').val(parseFloat(TotalValueFC).toFixed(2));
            //} else {
            //    $('#TotalValueLC').val(parseFloat((TotalValueLC + TotalTaxLC) - discount).toFixed(2));
            //    $('#TotalValueFC').val(parseFloat((TotalValueFC + TotalTaxFC) - parseInt(discountFC)).toFixed(2));
            //}
            if (DiscountType == 1) {
                if (BranchLocalCurrencyId == CurrencyId) {
                    TotalValueLC = TotalValueLC + TotalTaxLC - (TotalValueLC * (discount / 100));

                } else {
                    TotalValueLC = TotalValueLC + TotalTaxLC - (TotalValueLC * (discountFC / 100));
                    $('#discount').val(discountFC);
                }

                TotalValueFC = TotalValueFC + TotalTaxFC - (TotalValueFC * (parseInt(discountFC) / 100));
                $('#TotalValueLC').val(parseFloat(TotalValueLC).toFixed(2));
                $('#TotalValueFC').val(parseFloat(TotalValueFC).toFixed(2));
            } else {
                $('#discount').val(parseFloat(discount).toFixed(2));
                if (BranchLocalCurrencyId == CurrencyId) {
                    $('#TotalValueLC').val(parseFloat((TotalValueLC + TotalTaxLC) - discount).toFixed(2));

                } else {
                    var discount_amnt = discountFC * ExRate;
                    $('#TotalValueLC').val(parseFloat((TotalValueLC + TotalTaxLC) - discount_amnt).toFixed(2));
                    $('#discount').val(parseFloat(discount_amnt).toFixed(2));
                }
                $('#TotalValueFC').val(parseFloat((TotalValueFC + TotalTaxFC) - parseInt(discountFC)).toFixed(2));
            }

            if (BranchLocalCurrencyId == CurrencyId) {
                $('#TotalValueFC').val('0.00');
                $('.Tax_FC').val('0.00');
                $('#discountFC').val('0.00');
                $('#TotalFC').val('0.00');

            } else {
                //$('#TotalValueLC').val('0.00');
                //$('.Tax_LC').val('0.00');
                //$('#discount').val('')
                //$('#TotalLC').val('0.00');
            }
        }
        $("#SupplierID").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/PurchaseInvoice/Supplier',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.SupplierName,
                                value: val.SupplierName,
                                SupplierID: val.SupplierID
                            }
                        }))
                    }
                })
            }, minLength: 1,
            select: function (e, i) {
                e.preventDefault();
                $("#SupplierID").val(i.item.label);
                $('#SelectedSupplierID').val(i.item.SupplierID);
            }
        });
        
        var SelectedSupplierID = $('#SelectedSupplierID').val();
        var PurchaseInvoiceID = $('#PurchaseInvoiceID').val();
        if ((isNaN(SelectedSupplierID) == false) && PurchaseInvoiceID != 0) {
            $.ajax({
                url: '/AutoComplete/SupplierById',
                datatype: "json",
                data: {
                    Id: SelectedSupplierID
                },
                success: function (data) {
                    
                    $.each(data, function (index, element) {
                        $('#SupplierID').val(element.SupplierName);
                    });
                }
            });
        }

        $("#CurrencyID").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/AutoComplete/Currency',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.CurrencyName,
                                value: val.CurrencyName,
                                CurrencyID: val.CurrencyID
                            }
                        }))
                    }
                })
            }, minLength: 1,
            select: function (e, i) {
                e.preventDefault();
                $("#CurrencyID").val(i.item.label);
                $('#SelectedCurrencyID').val(i.item.CurrencyID);
            }
        });
        var SelectedCurrencyID = $('#SelectedCurrencyID').val();
        if ((isNaN(SelectedCurrencyID) == false) && PurchaseInvoiceID != 0) {
            $.ajax({
                url: '/AutoComplete/CurrencyById',
                datatype: "json",
                data: {
                    Id: SelectedCurrencyID
                },
                success: function (data) {
                    
                    $.each(data, function (index, element) {
                        $('#CurrencyID').val(element.CurrencyName);
                    });
                }
            });
        }


        $("#EmployeeID").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/AutoComplete/Employee',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.EmployeeName,
                                value: val.EmployeeName,
                                EmployeeID: val.EmployeeID

                            }
                        }))
                    }
                })
            }, minLength: 1,
            select: function (e, i) {
                e.preventDefault();
                $("#EmployeeID").val(i.item.label);
                $('#SelectedEmployeeID').val(i.item.EmployeeID);
                $('#Product_1_txt').focus();
            }
        });
        var SelectedEmployeeID = $('#SelectedEmployeeID').val();
        if ((isNaN(SelectedEmployeeID) == false) && PurchaseInvoiceID != 0) {
            $.ajax({
                url: '/AutoComplete/EmployeeById',
                datatype: "json",
                data: {
                    Id: SelectedEmployeeID
                },
                success: function (data) {
                    
                    $.each(data, function (index, element) {
                        $('#EmployeeID').val(element.EmployeeName);
                    });
                }
            });
        }


        $(".AccountHead").autocomplete(
            {
                source: function (request, response) {
                    $.ajax({
                        url: '/AutoComplete/AccountHead',
                        datatype: "json",
                        data: {
                            term: request.term
                        },
                        success: function (data) {
                            response($.map(data, function (val, item) {
                                return {
                                    label: val.AcHead,
                                    value: val.AcHead,
                                    AcHeadID: val.AcHeadID
                                }
                            }))
                        }
                    })
                }, minLength: 1,
                select: function (e, i) {
                    e.preventDefault();
                    
                    $(this).val(i.item.label);
                    var id = $(this).attr('id');
                    id = id.replace("_txt", "");
                    $("#" + id).val(i.item.AcHeadID);
                }
            });

        $('.Job').focus().autocomplete(JobAutoComplete);
        $('.Product').focus().autocomplete(ProductsAutoComplete);
        $('#invoicedate').focus();

    });

    
</script>
<link href="~/Content/themes/base/minified/jquery-ui.min.css" rel="stylesheet" />





