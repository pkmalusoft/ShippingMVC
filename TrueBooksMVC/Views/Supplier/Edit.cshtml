@model DAL.Supplier

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
}
<style>
    .searchdiv {
        background-color: #fff;
        width: 100%;
        margin: 0 auto;
        max-width: 500px;
        padding: 20px;
        margin-top: 50px;
        border-radius: 10px;
        box-shadow: 0 9px 23px rgba(0, 0, 0, 0.09), 0 5px 5px rgba(0, 0, 0, 0.06) !important;
    }
</style>
<script src="~/Content/bootstrap-multiselect.js"></script>
<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />

<script type="text/javascript">
    $(document).ready(function () {



        $("#SupplierName").focus();
        $(":text").css({ "border-radius": "5px" });
        $("select").css({ "border-radius": "5px" });

        $.ajax({
            type: "POST",
            url: "/Supplier/GetID",
            datatype: "Json",
            data:{supid:$("#SupplierID").val()},
            success: function (data) {
                $("#revids").val(data);
             
            }
        });

        $.ajax({
            type: "POST",
            url: "/Supplier/GetRevenue",
            datatype: "Json",
            success: function (data) {

                debugger;
               // $(".divcountry").show();
               // $(".divcity").hide();
                $('#RevenueItems').empty();

                $.each(data, function (index, value) {

                    var o_st = $("#revids").val().split(",");
                  
                    var flag = 0;
                    for (var j = 0 ; j < o_st.length; j++) {

                        if (o_st[j] == value.RevenueTypeID) {
                            flag = 1;
                            break;
                        }

                    }

                    if (flag == 1) {
                        $('#RevenueItems').append('<option value="' + value.RevenueTypeID + '" selected=true>' + value.RevenueType1 + '</option>');
                    }
                    else {
                        $('#RevenueItems').append('<option value="' + value.RevenueTypeID + '">' + value.RevenueType1 + '</option>');
                    }

                });



                $('#RevenueItems').multiselect({
                    enableClickableOptGroups: true,
                    enableCollapsibleOptGroups: true,
                    enableFiltering: true,
                    includeSelectAllOption: true
                });

                $(".multiselect-container").css({ "height": "200px", "overflow-y": "scroll" });



            }
        });
      
     

        $("#btnsave").click(function () {
            var sup = $("#SupplierName").val();
            var ref = $("#ReferenceCode").val();
            var con = $("#ContactPerson").val();
            var add = $("#Address1").val();
            var phone = $("#Phone").val();

            var email = $("#Email").val();

            var x = "";
            //$("#RevenueItems").change(function () {
            //    x = "";

            //    x = $("#RevenueItems").val();

            //    $("#RevenuTypeIds").val(x);
               

            //});


            x = $("#RevenueItems").val();

            $("#RevenuTypeIds").val(x);



            if (sup == "") {
                $("#alert").show();
                return false;
            }
            else if (ref == "") {
                $("#alert").show();
                return false;
            }
            else if (con == "") {
                $("#alert").show();
                return false;
            }
            else if (add == "") {

                $("#alert").show();
                return false;
            }
            else if (phone == "") {

                $("#alert").show();
                return false;
            }
            else if (email == "") {

                $("#alert").show();
                return false;
            }
            else {
                $("#alert").hide();
                return true;
            }


        });
    });
    </script>
<section class="content-header">
    <h1 class="headingfont">Supplier</h1>

</section>

<section class="content">
    @using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
       
        
        <input type="hidden" id="revids" />
        <fieldset class="searchdiv">
            <div id="alert" style="color:red;display:none;margin-left:10px;">*Please fill mandatory fields</div>
            <div class="row no-margin">

                <div class="col-md-3">
                    <label class="required headinglabel">Supplier Name</label>
                    @Html.HiddenFor(model => model.SupplierID)
                    @Html.TextBoxFor(model => model.SupplierName, new { @class = "form-control txttarget" })
                    @Html.ValidationMessageFor(model => model.SupplierName)
                </div>

                <div class="col-md-3">
                    <label class="required headinglabel">Reference Code</label>

                    @Html.TextBoxFor(model => model.ReferenceCode, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ReferenceCode)
                </div>

                <div class="col-md-3">
                    <label class="required headinglabel">Contact Person</label>

                    @Html.TextBoxFor(model => model.ContactPerson, new { @class = "form-control txttarget" })
                    @Html.ValidationMessageFor(model => model.ContactPerson)
                </div>
            </div>

            <div class="row no-margin" style="padding-top:10px">
                <div class="col-md-3">
                    <label class="required headinglabel">Address 1</label>
                    @Html.TextBoxFor(model => model.Address1, new { @class = "form-control txttarget" })
                    @Html.ValidationMessageFor(model => model.Address1)
                </div>

                <div class="col-md-3">
                    <label class="headinglabel">Address 2</label>

                    @Html.TextBoxFor(model => model.Address2, new { @class = "form-control txttarget" })
                    @Html.ValidationMessageFor(model => model.Address2)
                </div>

                <div class="col-md-3">
                    <label class="headinglabel">Address 3</label>

                    @Html.TextBoxFor(model => model.Address3, new { @class = "form-control txttarget" })
                    @Html.ValidationMessageFor(model => model.Address3)
                </div>
            </div>
            <div class="row no-margin" style="padding-top:10px">
                <div class="col-md-3">
                    <label class="headinglabel">POBoxNo</label>
                    @Html.TextBoxFor(model => model.POBoxNo, new { @class = "form-control textright" })
                    @Html.ValidationMessageFor(model => model.POBoxNo)
                </div>
                <div class="col-md-3">
                    <label class="required headinglabel">Phone</label>

                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control textright txttarget" })
                    @Html.ValidationMessageFor(model => model.Phone)
                </div>

                <div class="col-md-3">
                    <label class=" headinglabel">Fax</label>

                    @Html.TextBoxFor(model => model.Fax, new { @class = "form-control textright" })
                    @Html.ValidationMessageFor(model => model.Fax)
                </div>


            </div>
            <div class="row no-margin" style="padding-top:10px">
                <div class="col-md-3">
                    <label class="required headinglabel">Email</label>

                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
                <div class="col-md-3">
                    <label class="headinglabel">WebSite</label>

                    @Html.TextBoxFor(model => model.WebSite, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.WebSite)
                </div>

                <div class="col-md-3">
                    <label class="headinglabel">Max Credit Days</label>

                    @Html.TextBoxFor(model => model.MaxCreditDays, new { @class = "form-control textright" })
                    @Html.ValidationMessageFor(model => model.MaxCreditDays)
                </div>


            </div>
            <div class="row no-margin" style="padding-top:10px">
                <div class="col-md-3">
                    <label class=" headinglabel">Max Credit Limit</label>
                    @Html.TextBoxFor(model => model.MaxCreditLimit, new { @class = "form-control textright" })
                    @Html.ValidationMessageFor(model => model.MaxCreditLimit)
                </div>
                <div class="col-md-3">

                    <label class=" headinglabel">Revenue Type Ids</label>
                    @*@Html.TextBoxFor(model => model.RevenuTypeIds, new { @class = "form-control" })*@
                    @*@Html.DropDownListFor(model => model.RevenuTypeIds, new SelectList(ViewBag.revenue, "RevenueTypeID", "RevenueType1"),"Select Revenue", new {multiple="multiple", @class = "form-control" })*@

                    @Html.DropDownList("RevenueItems", new SelectList(ViewBag.revenue, "RevenueTypeID", "RevenueType1"), "Select Revenue", new { @class = "multiselect form-control", multiple = "multiple" })
                    @Html.HiddenFor(model => model.RevenuTypeIds)

                    @*@Html.ValidationMessageFor(model => model.RevenuTypeIds)*@
                </div>

                <div class="col-md-3">

                    <label class="headinglabel">Remark</label>
                    @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control txttarget" })
                    @Html.ValidationMessageFor(model => model.Remarks)

                </div>


            </div>
            <div class="row no-margin" style="padding-top:10px">
                <div class="col-md-3" style="padding-top:15px">

                    @Html.CheckBox("StatusActive", new { @name = "StatusActive" }) &nbsp <label class="headinglabel">Status Active</label>
                    @Html.ValidationMessageFor(model => model.StatusActive)
                </div>


                <div class="col-md-3" style="padding-top:15px">

                    @Html.CheckBox("StatusReserved", new { @name = "StatusReserved" }) &nbsp <label class="headinglabel">Status Reserved</label>
                    @Html.ValidationMessageFor(model => model.StatusReserved)


                </div>

                <div class="col-md-3" style="padding-top:15px">
                    @Html.CheckBox("statusInventory", new { @name = "statusInventory" }) &nbsp <label class="headinglabel">Status Inventory</label>
                    @Html.ValidationMessageFor(model => model.statusInventory)

                </div>
            </div>
            <div class="row no-margin" style="padding-top:10px">
                <div class="col-md-12">
                    <input type="submit" value="Update" class="btn btn-primary btnwidth" id="btnsave" />&nbsp;
                    <a href='@Url.Action("Index", "Supplier", new { id = 0 })' class="btn btn-primary btnwidth" data-toggle="tooltip" data-placement="right" title="Click here">Cancel</a>
                </div>
            </div>


        </fieldset>
}

</section>


@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
