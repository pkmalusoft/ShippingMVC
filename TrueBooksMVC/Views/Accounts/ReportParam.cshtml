@model TrueBooksMVC.Models.AccountsReportParam
@{
    Layout = null;
}
<script src="~/Content/NewCSS/plugins/jQuery/moment.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/js/bootstrap-datetimepicker.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/css/bootstrap-datetimepicker.min.css" />

<style>
    #movementid + .btn-group button, #movementid + .btn-group {
        display: block;
        width: 100%;
    }
</style>
<script>
    $(function () {
        $('#FromDate').datetimepicker({ format: 'DD-MM-YYYY' });

    });

    $(function () {
        $('#ToDate').datetimepicker({ format: 'DD-MM-YYYY' });

    });

    function setfilteroption() {
        if ($("#Filters").val() == "AcType") {
            $("#divacgroup").addClass("hide");
            $("#divachead").addClass("hide");
            $("#divactype").removeClass("hide");

        }
        else if ($("#Filters").val() == "AcGroup") {
            $("#divachead").addClass("hide");
            $("#divactype").addClass("hide");
            $("#divacgroup").removeClass("hide");
        }
        else if ($("#Filters").val() == "AcHead") {
            $("#divactype").addClass("hide");
            $("#divacgroup").addClass("hide");
            $("#divachead").removeClass("hide");
        }
        else {
            $("#divactype").addClass("hide");
            $("#divacgroup").addClass("hide");
            $("#divachead").removeClass("hide");
            $("#divachead").attr("disabled", "disabled");
        }

    }
    $(document).ready(function () {
        //$('#btn1').on('click', function () {

        //$.ajax({
        //    url: '/Accounts/ReportLedger',
        //    dataType: 'json',
        //    type: 'POST',
        //    data: { FromDate: $('#FromDate').val(), ToDate: $('#ToDate').val(), AcHeadId: $('#SelectedAcHead').val(), AcHeadName: $('#AcHeadName').val() }, //your string data
        //    success: function (response) {
        //        debugger;
        //        $("#DisplayPDF").html(
        //            $('<iframe>', {
        //                src: this.href,
        //                width: '600px',
        //                height: "800px"
        //            })
        //        );
        //    }
        //});
        //});
        $("#Filters").on("change", function () {

            if ($("#Filters").val() == "AcType") {
                $("#divacgroup").addClass("hide");
                $("#divachead").addClass("hide");
                $("#divactype").removeClass("hide");

            }
            else if ($("#Filters").val() == "AcGroup") {
                $("#divachead").addClass("hide");
                $("#divactype").addClass("hide");
                $("#divacgroup").removeClass("hide");
            }
            else if ($("#Filters").val() == "AcHead") {
                $("#divactype").addClass("hide");
                $("#divacgroup").addClass("hide");
                $("#divachead").removeClass("hide");
            }


        });

        $("#AcHeadName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/Accounts/AccountHead',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.AcHead,
                                value: val.AcHead,
                                AcHeadID: val.AcHeadID
                            }
                        }))
                    }
                })
            }, minLength: 1,
            autoFocus: false,
            focus: function (event, ui) {
                $("#AcHeadName").val(ui.item.label);
            },
            select: function (e, i) {
                e.preventDefault();
                $("#AcHeadName").val(i.item.label);
                $('#SelectedAcHead').val(i.item.AcHeadID);
            }
        });
    });


</script>
@using (Html.BeginForm("ReportParam", "Accounts", FormMethod.Post, new { @id = "reportparam" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="row no-margin d-flex">
    <div class="col-md-5 ">
        <div class="form-group">
            <div class="row">
        <div class="col-md-2 hide">
        <label class="headinglabel">Filters</label>
        @Html.DropDownList("Filters", new List<SelectListItem>
            {
                new SelectListItem{ Text="All", Value = "All" },
                new SelectListItem{ Text="Account Type", Value = "AcType" },
                new SelectListItem{ Text="Account Group", Value = "AcGroup" },
                new SelectListItem{ Text="Chart of Account", Value = "AcHead" },

             }, "Select", new { @class = "form-control", @id = "Filters" })
    </div>
    <div class="col-md-6">
        <label class="headinglabel required ">From Date</label>
        @Html.TextBoxFor(model => model.FromDate, new { @class = "form-control text-right", @required = "true" })
    </div>
    <div class="col-md-6">
        <label class="headinglabel required">To Date</label>
        @Html.TextBoxFor(model => model.ToDate, new { @class = "form-control text-right", @required = "true" })
    </div>
</div>
</div>
    <div class="col-md-12">
        <div id="divactype" class="hide">
            <label class="headinglabel">Account Type</label>
            @Html.DropDownListFor(model => model.AcTypeId, new SelectList(ViewBag.AccountType, "Id", "AccountType"), "Select", new { @class = "form-control txttarget" })
            @Html.ValidationMessageFor(model => model.AcTypeId)
        </div>
        <div id="divacgroup" class="hide">
            <label class="headinglabel">Account Group</label>
            @Html.DropDownListFor(model => model.AcGroupId, new SelectList(ViewBag.groups, "AcGroupID", "AcGroup"), "Select", new { @class = "form-control" })
        </div>
        <div id="divachead">
            <label class="headinglabel required">Chart of Accounts</label>
            @Html.TextBoxFor(model => model.AcHeadName, new { @class = "form-control", @autocomplete = "off", @id = "AcHeadName", @required = "true" })
            @Html.HiddenFor(model => model.AcHeadId, new { id = "SelectedAcHead" })
        </div>
    </div>
</div>

 <div class="col-md-3 col-md-offset-1">
            <div class="col-md-9">
                <label class="headinglabel  required">Output</label>
                @Html.DropDownList("Output", new List<SelectListItem>
                {
                    new SelectListItem{ Text="PDF", Value = "PDF" },
                    new SelectListItem{ Text="EXCEL", Value = "EXCEL" },
                    new SelectListItem{ Text="WORD", Value = "WORD" },

                 }, "Select", new { @class = "form-control",@value="PDF",@required="true" })
            </div>
            <div class="col-md-2 hide">
                <label class="headinglabel">Format</label>
                @Html.DropDownList("Format", new List<SelectListItem>
               {
                   new SelectListItem{ Text="PlainPaper", Value = "Plain Paper" },
                   new SelectListItem{ Text="LetterHead", Value = "Letter Head" }

                }, "Select", new { @class = "form-control" })
            </div>
            <div class="col-md-2 hide">
                <label class="headinglabel">Report Type</label>
                @Html.DropDownList("ReportType", new List<SelectListItem>
               {
                   new SelectListItem{ Text="Detailed", Value = "Detailed" },
                   new SelectListItem{ Text="Summary", Value = "Summary" }

                }, "Select", new { @class = "form-control" })
            </div>
            @*<div class="col-md-2">
                    <label class="headinglabel">Account Head</label>
                    @Html.TextBoxFor(model => model.AcHeadName, new { @class = "form-control", @autocomplete = "off", @id = "AcHeadName", @required = "true" })
                    @Html.HiddenFor(model => model.AcHeadId, new { id = "SelectedAcHead" })
                </div>

                <div class="col-md-2">
                    <label class="headinglabel required ">From Date</label>
                    @Html.TextBoxFor(model => model.FromDate, new { @class = "form-control text-right", @required = "true" })
                </div>
                <div class="col-md-2">
                    <label class="headinglabel required">To Date</label>
                    @Html.TextBoxFor(model => model.ToDate, new { @class = "form-control text-right", @required = "true" })
                </div>*@
            <div class="col-md-2">
                <button class="btn btn-primary" id="btnreport" type="submit" style="margin-top:30px;width: 60px!Important;min-width: 50px!important;"><i class="fa fa-refresh" aria-hidden="true"></i></button>                
                @*<a class="btn btn-primary btnwidth" title="Click to Print" style="margin-top:30px;width: 60px!Important;min-width: 50px!important;" href="Javascript:void(0)" onclick="PrintDiv('divreport')"><i class="fa fa-print" aria-hidden="true"></i></a>*@
                @*<a class="btn btn-primary btnwidth" title="Export to Excel" style="margin-top:30px;width: 60px!Important;min-width: 50px!important;" href="Javascript:void(0)" onclick="ExportExcel()"><img  style="width:30px;height:30px" src="~/Content/img/ExcelIcon.jpg" /></a>*@
            </div>
            @*<div class="col-md-2" style="padding-top:30px">
                    @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger btnwidth float-right" })
                </div>*@
        </div>
</div>

       
    }


