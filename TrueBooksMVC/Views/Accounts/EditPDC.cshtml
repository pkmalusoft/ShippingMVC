@model TrueBooksMVC.Models.PDCVM
@{
    ViewBag.Title = "PDC Transaction";
    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
}
    <style>
        #details tr {
            height: 32px;
        }
         #details td input{
            background:transparent;
            border-color:transparent;
         }
         #DeleteNewRow {
            color:#dd4b39;
         }
        #details td input:focus{
            border-color:#07a7e3;
        } 
        .headinglabel {
            font-family: Calibri;
            font-size: 16px;
            color: #2b2929 !important;
        }

        .jobform {
            background-color: #fff;
            box-shadow: 0 9px 23px rgba(0, 0, 0, 0.09), 0 5px 5px rgba(0, 0, 0, 0.06) !important;
            border-radius: 25px;
            margin-bottom: 27px;
            padding: 20px;
            width: 100%;
            margin: 0 auto;
            max-width: 700px;
        }

        legend {
            color: #000 !important;
        }
    </style>
<style>
    .searchdiv {
        background-color: #fff;
        width: 100%;
        margin: 0 auto;
        max-width: 500px;
        padding: 20px;
        margin-top: 50px;
        border-radius: 10px;
        box-shadow: 0 9px 23px rgba(0, 0, 0, 0.09), 0 5px 5px rgba(0, 0, 0, 0.06) !important;
    }
</style>
<script type="text/javascript">
        $(document).ready(function () {
           
            $(function () {
                $("#transdate").datepicker({
                    dateFormat: 'dd-M-yy',
                    changeYear: true, changeMonth: true,
                });
            });

            $(function () {
                $("#chequedate").datepicker({
                    dateFormat: 'dd-M-yy',
                    changeYear: true, changeMonth: true,
                });
            });

            $.ajax({
                type: "POST",
                url: "/Accounts/GetAcMemoJDeatils",
                datatype: "Json",
                data: { id: $("#AcJournalID").val() },
                success: function (data) {

                    $.each(data, function (index, value) {
                        var i = $('#details tr').length - 1;
                        $("#details").append('<tr>' + '<td>' + value.AcHead + '<input type="hidden" name="AcJMDetailVM[' + i + '].IsDeleted" class= "hdndeleted" /><input type="hidden" value=' + value.AcHeadID + ' name="AcJMDetailVM[' + i + '].AcHeadID"><input type="hidden" value=' + value.AcHead + ' name="AcJMDetailVM[' + i + '].AcHead"><input type="hidden" value=' + value.AcMemoDetailID + ' name="AcJMDetailVM[' + i + '].AcMemoDetailID"></td>' +
                            '<td style="text-align:center"><input class="textbox textright" type="text" value=' + parseFloat(value.Amt).toFixed(2) + ' name="AcJMDetailVM[' + i + '].Amt"></td>' + '<td>' + value.Rem + '<input type="hidden" value=' + value.Rem + ' name="AcJMDetailVM[' + i + '].Rem"></td>' + 
                            '<td><a href="javascript:void(0)" id="DeleteNewRow"><i class="fa fa-times"></i></a></td></tr > ');
                    });
                }


            });

            $("#ReceivedFrom").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Accounts/AccountHead',
                        datatype: "json",
                        data: {
                            term: request.term
                        },
                        success: function (data) {
                            response($.map(data, function (val, item) {
                                return {
                                    label: val.AcHead,
                                    value: val.AcHead,
                                    AcHeadID: val.AcHeadID
                                }
                            }))
                        }
                    })
                }, minLength: 1,
                select: function (e, i) {
                    e.preventDefault();
                    $("#ReceivedFrom").val(i.item.label);
                    $('#SelectedReceivedFrom').val(i.item.AcHeadID);
                }
            });
            $(":text").css({ "border-radius": "5px" });
            $("select").css({ "border-radius": "5px" });


            $("#bankname").prop('disabled', false);
            $("#chequeno").prop('disabled', false);
            $("#chequedate").prop('disabled', false);
            $("#partyname").prop('disabled', false);



            $("#TransactionType").val("PD");

            if ($("#transtype option:selected").val() == "1") {
                $(".label1").html("Received From");
                $("#bankname").prop('disabled', false);
                $("#partyname").prop('disabled', false);
            }
            else {
                $(".label1").html("Paid To");
                $("#bankname").prop('disabled', true);
                $("#partyname").prop('disabled', true);
            }

            $("#transtype").change(function () {
                var v = $("#transtype option:selected").val();

             
                if (v == "1") {
                    $(".label1").html("Received From");
                }
                else {
                    $(".label1").html("Paid To");
                }


                var rcbpaytype = $("#transtype option:selected").val();
             
                if (rcbpaytype == "1") {
                    $("#TransactionType").val("PD");
                    $("#bankname").prop('disabled', false);
                    $("#partyname").prop('disabled', false);


                }
                else if (rcbpaytype == "2") {
                    $("#TransactionType").val("PD");
                    $("#bankname").prop('disabled', true);
                    $("#partyname").prop('disabled', true);
                   
                }
             
            });





            $("#AcHead").change(function () {
                $.ajax({
                    type: "POST",
                    url: "/Accounts/GetBalance",
                    datatype: "Json",
                    data:{acheadid:$("#AcHead option:selected").val()},
                    success: function (data) {
                        $("#balance").html(data.d);
                    }
                });
            });


            //$("#btnAdd").click(function () {
             
            //    var str = "";
            //    var totalamt = 0;
            //    $("#details tr:last-child").after('<tr><td>' + $("#ReceivedFrom option:selected").val() + '</td><td>' + $("#ReceivedFrom option:selected").text() + '</td><td>' + $("#amount").val() + '</td><td>' + $("#remark1").val() + '</td></tr>');

            //    $("#details").find('tr:not(:first-child)').each(function (i, el) {
            //        var $tds = $(this).find('td'),
            //          acheadid = $tds.eq(0).text(),
            //           Amount = $tds.eq(2).text(),
                     
            //        Remark = $tds.eq(3).text();
            //        str = str + acheadid + "~" + Amount + "~" + Remark + "~";
            //        totalamt = parseInt(totalamt) + parseInt(Amount);
            //    });

            //    $("#AcJournalDetail").val(str);
            //    $("#TotalAmt").val(totalamt);
            //    return false;
            //});


            $("#btnAdd").click(function () {
                var amt = parseFloat($("#amount").val());

                if ($("#ReceivedFrom").val() == "" || $("#SelectedReceivedFrom").val() == 0) {
                    alert("Please Select Head!");
                    $("#ReceivedFrom").focus();
                    return;
                }
                else if ($("#amount").val() == "") {
                    alert("Please Enter The Amount");
                    $("#amount").focus();
                    return;
                }
                else if (isNaN(amt)) {
                    alert("Please Enter The Amount");
                    $("#amount").focus();
                    return;
                }
                else if (amt == 0) {
                    alert("Please Enter The Amount");
                    $("#amount").focus();
                    return;
                }
                else {

                    var str = "";
                    var totalamt = 0;
                    var i = $('#details tr').length - 1;

                    $("#details").append('<tr>' + '<td>' + $("#ReceivedFrom").val() + '<input type ="hidden" name="AcJMDetailVM[' + i + '].IsDeleted" class="hdndeleted" /><input type="hidden" value=' + $("#SelectedReceivedFrom").val() + ' name="AcJMDetailVM[' + i + '].AcHeadID"><input type="hidden" value=' + $("#SelectedReceivedFrom").val() + ' name="AcJMDetailVM[' + i + '].AcHead"></td>' +
                        '<td style="text-align:center"><input type="text" class="textright"  value=' + parseFloat($("#amount").val()).toFixed(2) + ' name="AcJMDetailVM[' + i + '].Amt"></td>' + '<td>' + $("#remark1").val() + '<input type="hidden" value=' + $("#remark1").val() + ' name="AcJMDetailVM[' + i + '].Rem"></td>' + 
                        '<td><a href="javascript:void(0)" id="DeleteNewRow"><i class="fa fa-times"></i></a></td></tr > ');


                    //$("#ReceivedFrom").val($("#ReceivedFrom option:first").val());
                    $("#ReceivedFrom").val('');
                    $("#SelectedReceivedFrom").val('0');
                    $("#amount").val('');
                    $("#remark1").val('');

                    $("#details").find('tr:not(:first-child)').each(function (i, el) {

                        Amount = $tds.eq(2).find('input[type=hidden]').val();


                        totalamt = parseInt(totalamt) + parseInt(Amount);
                    });

                    alert(totalamt);
                    $("#TotalAmt").val(totalamt);
                }
                return false;
            });

            $("#details").on("click", "#DeleteNewRow", function () {
                //$(this).parent().parent().remove();
                $(this).parent().parent().addClass('hide');
                var obj = $(this).parent().parent().find('.hdndeleted');
                $(obj).val(true);
            });

            $("#btnsave").click(function () {
                if ($("#transdate").val() == "") {
                    $("#alert").show();
                    return false;

                }
                else if ($("#AcHead").val() == "") {
                    $("#alert").show();
                    return false;
                }
                else if ($("#chequeno").val() == "") {
                    $("#alert").show();
                    return false;
                }
                else if ($("#chequedate option:selected").val() == "") {
                    $("#alert").show();
                    return false;
                }
                else {
                    $("#alert").hide();
                    return true;
                }
            });
        });
    </script>
<section class="content-header">
    <h1 class="headingfont">PDC Transaction</h1>

</section>


<section class="content">

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
      
    <fieldset>
      
        <div id="alert" style="color:red;display:none;margin-left:10px;">*Please fill mandatory fields</div>
         <div class="row no-margin"> 
             
             <div class="col-md-3">

                @Html.HiddenFor(model=>model.TransactionType)
                  @Html.HiddenFor(model=>model.VoucherNo)
                  @Html.HiddenFor(model=>model.VoucherType)


                  @Html.HiddenFor(model=>model.AcJournalID)
                 @Html.HiddenFor(model => model.AcHead)
                  @Html.HiddenFor(model=>model.AcBankDetailID)

                          <label class="headinglabel">Transaction Type</label>
                       @Html.DropDownListFor(model => model.transtype, ViewBag.transtypes as SelectList, new { @class = "form-control txttarget"})
                        @Html.ValidationMessageFor(model => model.transtype)
                 @Html.HiddenFor(Model => Model.TransactionType)
                            
             </div>
           
               <div class="col-md-3">
                          <label class="required headinglabel">Transaction Date</label>
                         @Html.TextBoxFor(model => model.transdate,String.Format("{0:dd-MMM-yyyy}",this.Model.transdate),new { @class = "form-control", @autocomplete = "off" })
                         @Html.ValidationMessageFor(model => model.transdate)
                          
             </div>

               <div class="col-md-3">
                          <label class="required headinglabel">Deposit Bank</label>
                       @Html.DropDownListFor(model => model.AcHead,new SelectList(ViewBag.heads,"AcHeadID","AcHead"),"Select", new { @class = "form-control txttarget" })
                        @Html.ValidationMessageFor(model => model.AcHead)
                            
             </div>

               <div class="col-md-3">
                          <label class="headinglabel">Remarks</label>
                         @Html.TextAreaFor(model => model.remarks,new { @class = "form-control" })
                         @Html.ValidationMessageFor(model => model.remarks)
                       <span id="balance"></span>
             </div>
            
       </div>

         
       
     @*   <div class="row no-margin" style="padding-top:10px">
                        <div class="col-md-12">
                           
                                <input type="submit"  value="Save"  class="btn btn-primary btnwidth" />
                               
                            &nbsp; 
                                           <a href='@Url.Action("IndexAcBook", "Accounts", new { id = 0 })' class="btn btn-primary btnwidth" data-toggle="tooltip" data-placement="right" title="Click here">Cancel</a>
                           
                        </div>
                    </div>*@

       
    </fieldset>
    
    <br />
    <fieldset>        
        <h3 style="color:white">Bank Details</h3><hr />
        <div class="row no-margin">

            <div class="col-md-3">
                <label class="headinglabel">Bank Name</label>
                @Html.TextBoxFor(model => model.bankname, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.bankname)

            </div>
            <div class="col-md-3">
                <label class="required headinglabel">Cheque No</label>
                @Html.TextBoxFor(model => model.chequeno, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.chequeno)

            </div>
            <div class="col-md-3">
                <label class="required headinglabel">Cheque Date</label>
                @Html.TextBoxFor(model => model.chequedate, String.Format("{0:dd-MMM-yyyy}", this.Model.chequedate), new { @class = "form-control" ,@autocomplete="off"})
                @Html.ValidationMessageFor(model => model.chequedate)

            </div>

            <div class="col-md-3">
                <label class="headinglabel">Party Name</label>
                @Html.TextBoxFor(model => model.partyname, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.partyname)

            </div>
        </div>


    </fieldset>
    
    
       <fieldset>
           
           <h3 style="color:white">Add Details</h3><hr />
           <div class="row no-margin">
                <div class="col-md-11">
               <div class="col-md-4">
                   <label class="headinglabel label1">Received From</label>
                   <input type="text" id="ReceivedFrom" name="ReceivedFrom" class="form-control" autocomplete="off" />
                   @Html.HiddenFor(model => model.ReceivedFrom, new { Value = "0", id = "SelectedReceivedFrom" })
                   @*@Html.DropDownListFor(model => model.ReceivedFrom, new SelectList(ViewBag.headsreceived, "AcHeadID", "AcHead"), new { @class = "form-control txttarget" })*@
                   @Html.ValidationMessageFor(model => model.ReceivedFrom)

               </div>


                <div class="col-md-4">
                    <label class="headinglabel">Amount</label>
                    @Html.TextBoxFor(model => model.amount, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.amount)

               </div>
               <div class="col-md-4">
                   <label class="headinglabel">Remark</label>
                   @Html.TextAreaFor(model => model.remark1, new { @class = "form-control" })
                   @Html.ValidationMessageFor(model => model.remark1)

                </div>
            </div>
            <div class="col-md-1 text-right" style="margin-top:11px;padding-top:21px">
                 <button type="button" class="btn btn-primary btnwid small_btn" value="Add" id="btnAdd"><i class="fa fa-plus"></i></button>
            </div>
            </div>
            


            <hr />

           <div class="row no-margin" style="padding-top:10px">
               <table class="table table-bordered table-responsive" id="details" >

                   <thead>
                   <th width="30%">AcHead</th>
                   <th width="20%">Amount</th>
                   <th width="40%">Remark</th>
                   <th width="5%" ></th>

                   </thead>
                   <tbody>
                       @Html.HiddenFor(model => model.TotalAmt)
                   </tbody>
               </table>

               
           </div>

           <div class="row no-margin" style="padding-top:10px">
               <div class="" style="text-align:right;padding:10px">
                   <input type="submit" value="Update" class="btn btn-primary btnwidth" id="btnsave" />&nbsp;&nbsp;<a href='@Url.Action("IndexPDCTransaction", "Accounts", new { id = 0 })' class="btn btn-danger btnwidth" data-toggle="tooltip" data-placement="right" title="Click here">Cancel</a>
               </div>
           </div>
       </fieldset>
    
}
    </section>
