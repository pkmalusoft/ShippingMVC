<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>

    <meta charset="UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <meta content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no'
          name='viewport'>

    @*      @Scripts.Render("~/NewDesignFiles/jquery.min.js")*@

    @*<link rel="stylesheet" href="//code.jquery.com/ui/1.12.0/themes/base/jquery-ui.css">*@
    <link href="~/Content/jquery-ui.css" rel="stylesheet" />
    @*
        <link rel="stylesheet" href="/resources/demos/style.css">*@


    @Styles.Render("~/content/css/bootstrap-inputs.css")
    @Styles.Render("~/content/css/skins/_all-skins.min.css")
    <!-- JS SCRIPTS -->
    <script src="~/Content/NewCSS/plugins/jQuery/jQuery-2.2.0.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

    <script src="~/Content/jquery-ui.js"></script>
    <script src="~/Content/NewCSS/bootstrap/js/bootstrap.min.js"></script>
    <script src="~/Content/NewCSS/js/app.min.js"></script>
    <script src="~/Content/jquery.dataTables.min.js"></script>


    <script src="~/Scripts/notify.js"></script>
    <script src="~/Scripts/notify.min.js"></script>
    <!-- css files -->
    <link rel="stylesheet" href="~/Content/NewCSS/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/NewCSS/css/style.css">
    <link rel="stylesheet" href="~/Content/NewCSS/css/font-awesome/css/font-awesome.css">
    <link rel="stylesheet" href="~/Content/NewCSS/css/skins/skin-blue.min.css">
    


    <style>
        /*.panel-body {
            background-color:silver !important;
        }*/
        html, button, input, optgroup, select, textarea {
            font-family: 'Montserrat', sans-serif !important;
        }

        .field-validation-error {
            color: #ff0000;
        }

        .field-validation-valid {
            display: none;
        }

        .input-validation-error {
            border: 1px solid #ff0000;
            background-color: #ffeeee;
        }

        .validation-summary-errors {
            font-weight: bold;
            color: #ff0000;
        }

        .validation-summary-valid {
            display: none;
        }

        .required:after {
            content: " *";
            font-weight: bold;
            color: red;
        }

        .headinglabel {
            font-family: Calibri;
            font-size: 14px;
            color: #232121 !important;
        }

        .newlink {
            padding-left: 20px;
        }

        .newrowpadding {
            padding-top: 10px;
        }

        .cbtnpadding {
            padding-left: 30px;
        }

        .btnwidth {
            width: 100px;
        }

        .textright {
            text-align: right;
        }

        .textleft {
            text-align: left;
        }


        .tblfont {
            font-family: Calibri;
            font-size: 15px;
        }

        .headingfont {
            font-family: Calibri;
        }

        .tblbackground {
            background-color: #fff;
        }

        .indexbtnpadding {
            padding-left: 15px;
        }

        .no-js #loader {
            display: none;
        }

        .js #loader {
            display: block;
            position: absolute;
            left: 100px;
            top: 0;
        }

        .se-pre-con {
            position: fixed;
            left: 0px;
            top: 0px;
            width: 100%;
            height: 100%;
            z-index: 9999;
            /*/background: url(images/loader-64x/Preloader_2.gif) center no-repeat #fff;*/
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button {
            box-sizing: border-box;
            display: inline-block;
            min-width: 1.5em;
            padding: 0.5em 1em;
            margin-left: 2px;
            text-align: center;
            text-decoration: none !important;
            cursor: pointer;
            background-color: #35b8eb;
            color: white !important;
            border: 1px solid transparent;
            font-family: Calibri;
        }

        #dataTables-example_filter {
            display: none !important;
            font-family: Calibri;
        }

        #mydataTable-example_filter {
            display: none !important;
            font-family: Calibri;
        }

        input[type=text]:focus, textarea:focus {
            border-color: red;
        }

        input[type=select]:focus {
            border-color: red;
        }
    </style>

    <style>
        @@media screen and (min-width: 992px) {

            .notifyjs-corner {
                width: 65% !important;
                border-radius: 1px;
                font-family: Calibri;
            }

            .notifyjs-bootstrap-base {
                text-align: center !important;
                font-family: Calibri;
                /*background-color:#35b8eb;
        color:white;*/
            }
        }
    </style>
    <style type="text/css">
        body {
            font-family: Calibri;
            font-size: 10pt;
        }

        .modalloader {
            position: fixed;
            z-index: 999;
            height: 100%;
            width: 100%;
            top: 0;
            left: 0;
            background-color: Black;
            filter: alpha(opacity=60);
            opacity: 0.6;
            -moz-opacity: 0.8;
        }

        .center {
            z-index: 1000;
            margin: 300px auto;
            padding: 10px;
            width: 130px;
            background-color: White;
            border-radius: 10px;
            filter: alpha(opacity=100);
            opacity: 1;
            -moz-opacity: 1;
        }

            .center img {
                height: 128px;
                width: 128px;
            }
option{border: 1px solid;
    margin-top: -2px;
    margin-left: 5px;
    text-align: center;
    margin-bottom: 10px;
    padding: 6px;
    font-size: 12px;
}label.final_per {
    text-align: center;
    /* margin-top: 7px; */
    padding: 9px;
    font-size: 12px;
}
    </style>

    <script>


        function showLoading() {
            $(".modalloader").show();
        }
        function hideLoading() {
            $(".modalloader").hide();
        }


        //paste this code under head tag or in a seperate js file.
        // Wait for window load
        $(window).load(function () {
            // Animate loader off screen
            $(".se-pre-con").fadeOut("slow");;
        });
    </script>


    <script type="text/javascript">

        $(document).ready(function () {

            $.ajax({
                type: "POST",
                url: "/Login/GetAllYears",
                datatype: "Json",
                success: function (data) {
                    $("#FYearID").empty();

                    $.each(data, function (index, value) {
                        $('#FYearID').append('<option value="' + value.AcFinancialYearID + '">' + value.FYearName + '</option>');


                    });
                    var fy = '@Session["fyearid"].ToString()';

                    $("#AcFYearID option[value='" + fy + "']").attr("selected", "selected");
                }
            });


            $(".txttarget").change(function () {
                var x = $(this);
                var str = "";
                str = x.val();
                var splitStr = str.toLowerCase().split(' ');
                for (var i = 0; i < splitStr.length; i++) {
                    // You do not need to check if i is larger than splitStr length, as your for does that for you
                    // Assign it back to the array
                    splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);
                }
                // Directly return the joined string
                var newtxt = "";
                newtxt = splitStr.join(' ');
                $(x).val('');
                $(x).val(newtxt);

            });

            $("#AcFYearID").change(function () {


                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetChangeFyear", "Login")',
                    datatype: "html",
                    data: { FyearId: $('#AcFYearID').val() },
                    success: function (data) {
                        window.location.href ='@System.Configuration.ConfigurationManager.AppSettings["HomePath"].ToString()';

                    }
                });
            });

            $(".tdtarget").each(function () {
                var x = $(this);
                var str = "";
                str = x.text();
                var splitStr = str.toLowerCase().split(' ');
                for (var i = 0; i < splitStr.length; i++) {
                    // You do not need to check if i is larger than splitStr length, as your for does that for you
                    // Assign it back to the array
                    splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);
                }
                // Directly return the joined string
                var newtxt = "";
                newtxt = splitStr.join(' ');
                $(x).text('');
                $(x).text(newtxt);

            });




        });
        @*  $(document).ready(function () {
            $("a").click(function () {
                if ($(this).attr('id') == "78") {
                    $('#myModal').modal('show');
                }
            });

            $("#btnsubmit").click(function () {
                if ($("#plain").is(':checked')) {

                    window.location.href = '@Url.Action("JobRegister", "ReportInvoice", new { layout = "~/Views/Shared/PlainLayout.cshtml" })';
                }

                if ($("#formatted").is(':checked')) {

                    window.location.href = '@Url.Action("JobRegister", "ReportInvoice", new { layout = "~/Views/Shared/FormattedLayout.cshtml" })';
                }


            });
        });*@
    </script>
</head>
@{ 
    string UserName = "";
    var AcYearList = new List<DAL.AcFinancialYearSelect_Result>();
   // var AcYearList1 = new List<DAL.AcFinancialYearSelect_Result>();
    AcYearList.Where(item => item.AcFinancialYearID == Convert.ToInt32(Session["fyearid"]));
    if (Session["UserName"] != null)
    {
        UserName = Session["UserName"].ToString();
    }
    if (Session["FinancialyearList"] != null)
    {
        AcYearList = (List<DAL.AcFinancialYearSelect_Result>)Session["FinancialyearList"];
        //AcYearList1 = AcYearList.Where(item => item.AcFinancialYearID == Convert.ToInt32(Session["fyearid"])).ToList();
    }
}
@{ Boolean IsUserAdmin = false;
   if (Session["IsAdmin"] != null)
   {
       IsUserAdmin = Convert.ToBoolean(Session["IsAdmin"]);
   }
}
<body class="hold-transition sidebar-mini ">
    <div class="modalloader" style="display: none">
    <div class="center">
        <img src="~/Images/loader.gif" />      
    </div>
</div>
    <div class="se-pre-con"></div>
    <div class="wrapper">

        <!-- Main Header -->
        <header class="main-header">

           

            <!-- Header Navbar -->
            <nav class="navbar navbar-static-top" role="navigation">
                <!-- Sidebar toggle button-->
                <a href="index2.html" class="logoimages">
                    <!-- mini logo for sidebar mini 50x50 pixels -->
                                  <!-- logo for regular state and mobile devices -->
                    <span class="logosmall">
                        <img class="img-responsive logonav" src="~/Content/img/logo_truebook.png" alt="logolarge">
                    </span>
                </a>
                <a href="#" class="sidebar-toggle" data-toggle="offcanvas" role="button"><span class="sr-only">Toggle navigation</span> </a>
                <div style="display: inline-block; padding-top: 15px;margin-top: 6px;">
<div class="row"><div class="col-md-12" style="display:flex">
<label class="final_per">Financial Period</label
                    @Html.DropDownList("AcFYearID", new SelectList(AcYearList, "AcFinancialYearID", "FYearName"), new { @class = "form-control fin_pre" })
</div>
</div>
                </div>
                <!-- Navbar Right Menu -->
                <div class="navbar-custom-menu">
                    <ul class="nav navbar-nav">

                        <!-- User Account Menu -->
                        <li class="dropdown user user-menu">
                            <!-- Menu Toggle Button -->

                            <ul class="dropdown-menu extended logout">
                                <li><a href="#"><i class=" fa fa-suitcase"></i>Profile</a></li>
                                <li><a href="#"><i class="fa fa-cog"></i>Settings</a></li>
                                <li><a href="@Url.Action("Signout", "Login")"><i class="fa fa-key"></i>Log Out</a></li>
                            </ul>
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                <!-- The user image in the navbar-->
                                <img src="~/Content/NewCSS/img/user2-160x160.jpg" class="user-image" alt="User Image">
                                <!-- hidden-xs hides the username on small devices so only the image appears. -->
                                <span class="hidden-xs">@UserName</span> <b class="caret"></b>
                            </a>
                        </li>
                    </ul>
                </div>
            </nav>
        </header>
        <script>
            (function () {
                let isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
                let isSafari = /Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor);
                let scrollbarDiv = document.querySelector('.main-sidebar');
                if (!isChrome && !isSafari) {
                    scrollbarDiv.innerHTML = 'You need Webkit browser to run this code';
                }
            })();


        </script>
        <!-- Left side column. contains the logo and sidebar -->
        <aside class="main-sidebar" style="display:none">

            <!-- sidebar: style can be found in sidebar.less -->
            <section class="sidebar">
                <a href="index2.html" class="logo">
                    <!-- mini logo for sidebar mini 50x50 pixels -->
                    <span class="logo-mini">
                        <img class="img-responsive" src="~/Content/img/truebooks_logo.png" alt="logosmall">
                    </span>
                    </a>
                    <!-- Sidebar Menu -->
                    <ul class="sidebar-menu" style="margin-top: 20px">
                        @{
                            TrueBooksMVC.Models.SourceMastersModel obj = new TrueBooksMVC.Models.SourceMastersModel();

                            List<DAL.Menu> menuList = (List<DAL.Menu>)Session["Menu"];
                            List<DAL.Menu> parentMenu = new List<DAL.Menu>();
                            if (menuList != null)
                            {
                                parentMenu = menuList.Where(p => Convert.ToInt32(p.ParentID) == 0).ToList();
                            }

                            if (parentMenu != null)
                            {
                                foreach (var item in parentMenu)
                                {
                                    List<int> RoleId = (List<int>)Session["RoleID"];
                                    int menuid = Convert.ToInt32(item.MenuID);
                                    if (item.PermissionRequired.HasValue && item.PermissionRequired.Value)
                                    {
                                        if (obj.IsAccessibleMenu(menuid, RoleId))
                                        {
                                            <li class="treeliss">
                                                <a id="@item.MenuID" href=@item.Link><i class="@item.imgclass"></i><span>@item.Title</span></a>
                                                @if (menuList.Count(p => p.ParentID == item.MenuID) > 0)
                                                {
                                                    @:<ul class="treeview-menu">
                                                    }
                                                @RenderMenuList(menuList, item)
                                                @if (menuList.Count(p => p.ParentID == item.MenuID) > 0)
                                                {
                                                @:</ul>
                                            }
                                            </li>
                                        }
                                    }
                                    else
                                    {
                                        <li class="treeliss">
                                            <a id="@item.MenuID" href=@item.Link><i class="@item.imgclass"></i><span>@item.Title</span></a>
                                            @if (menuList.Count(p => p.ParentID == item.MenuID) > 0)
                                            {
                                                @:<ul class="treeview-menu">
                                                }
                                            @RenderMenuList(menuList, item)
                                            @if (menuList.Count(p => p.ParentID == item.MenuID) > 0)
                                            {
                                            @:</ul>
                                        }
                                        </li>
                                    }

                                }
                            }

                            @helper RenderMenuList(List<DAL.Menu> menuList, DAL.Menu mi)
                            {
                                foreach (var item1 in menuList.Where(p => p.ParentID == mi.MenuID))
                                {
                                    @:<li class="treeli">
                                        <a id="
                            @item1.MenuID" href=@item1.Link><i class="@item1.imgclass"></i><span>@item1.Title</span></a>
                            if (menuList.Count(p => p.ParentID == item1.MenuID) > 0)
                            {
                                @:<ul class="treemenus">
                                }
                                @RenderMenuList(menuList, item1)
                                if (menuList.Count(p => p.ParentID == item1.MenuID) > 0)
                                {
                                @:</ul>
                            }
                            else
                            {
                            @:</li>
                        }
                    }
                            }

                        }
                        <!-- Optionally, you can add icons to the links -->


                    </ul>

                    <!-- /.sidebar-menu -->
            </section>
            <!-- /.sidebar -->
        </aside>

        <!-- Content Wrapper. Contains page content -->


        <div class="content-wrapper">
            <!-- Content Header (Page header) -->
            @RenderBody()
        </div>
        <!-- /.content-wrapper -->

        <!-- Main Footer -->
        <footer class="main-footer">
            <!-- To the right -->

            <!-- Default to the left -->
            Copyright &copy; 2016 <a href="#" class="comname">Malusoft</a>. All rights reserved.
        </footer>
    </div>
    <!-- ./wrapper -->


    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel">Report</h4>
                </div>
                <div class="modal-body">
                    <input type="radio" name="rpttype" id="plain" class="rbtn" value="plain" />&nbsp;Plain Report<br />
                    <br />
                    <input type="radio" id="formatted" name="rpttype" class="rbtn" value="formatted" />&nbsp;Formatted Report
                </div>
                <div class="modal-footer">

                    <button type="button" class="btn btn-primary" id="btnsubmit">Submit</button>
                </div>
            </div>
        </div>
    </div>
</body>
</html>



